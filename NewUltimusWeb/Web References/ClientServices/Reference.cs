//------------------------------------------------------------------------------
// <auto-generated>
//     這段程式碼是由工具產生的。
//     執行階段版本:4.0.30319.42000
//
//     對這個檔案所做的變更可能會造成錯誤的行為，而且如果重新產生程式碼，
//     變更將會遺失。
// </auto-generated>
//------------------------------------------------------------------------------

// 
// 原始程式碼已由 Microsoft.VSDesigner 自動產生，版本 4.0.30319.42000。
// 
#pragma warning disable 1591

namespace NewUltimusWeb.ClientServices {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="ServicesSoap", Namespace="http://www.Ultimus.Com/ClientServices")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ServerPreferences))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(TaskStatus))]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ResView))]
    public partial class Services : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback AssignAllCurrentTasksOperationCompleted;
        
        private System.Threading.SendOrPostCallback ForwardTasksOperationCompleted;
        
        private System.Threading.SendOrPostCallback AssignToProcExpertOperationCompleted;
        
        private System.Threading.SendOrPostCallback TakeBackTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFormURLForEditOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFormURLForPreviewOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetForwardableTasksExOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetForwardableTasksOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetForwardedTasksOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetForwardedTasksOperationCompleted;
        
        private System.Threading.SendOrPostCallback PutTaskInQueueOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTaskHelpURLOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNextQueueTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetNextQueueTaskExOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckInTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckOutTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback CanAssignToOperationCompleted;
        
        private System.Threading.SendOrPostCallback CanAssignToExOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTaskCheckOutUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStepDefaultFormOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetStepSchemaOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTaskDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback ReturnTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback SaveTemplateOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExtractFormAndGetURLOperationCompleted;
        
        private System.Threading.SendOrPostCallback ExtractFormAndGetURL1OperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDetailedIncidentStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetIncidentMemoOperationCompleted;
        
        private System.Threading.SendOrPostCallback AbortIncidentOperationCompleted;
        
        private System.Threading.SendOrPostCallback CanAbortOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetIncidentGraphicalStatusOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInitiatorOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProcessSchemaOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetIncidentDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInstalledProcessesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetInstalledProcessesByLatestVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProcessStepsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetProcessHelpURLOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckProcessRightOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataByViewIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDataForViewOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetReportsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserServerPreferencesOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateServerVisibilityOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateUserCredentialsOperationCompleted;
        
        private System.Threading.SendOrPostCallback ValidateUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllJobFunctionsOfUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback LoginUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback LogoutUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsValidSessionIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFullNameFromShortNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetExactCaseUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsDepartmentMemberOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDepartmentsListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserEmailAddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetUserEmailAddressOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserPropertiesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserGroupsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPersonOrganizationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetFullNamesFromShortNamesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserSubordinatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserSubordinatesExOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserSubordinatesForJobFunctionOperationCompleted;
        
        private System.Threading.SendOrPostCallback IsUserHierarchicallyAboveOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserIDForJobFunctionOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckUserRightOperationCompleted;
        
        private System.Threading.SendOrPostCallback AreAccessRigthsEnabledOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserViewsListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGroupViewsListOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddUserViewOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddGroupViewOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteUserViewOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteGroupViewOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserViewsForClientOperationCompleted;
        
        private System.Threading.SendOrPostCallback RestoreGenericUserViewsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGroupViewsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetGroupViewOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetViewByIDOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateUserViewOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateGroupViewOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateViewFolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddViewFolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteViewFolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateViewFolderNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserFolderListOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateViewSequenceNumberInFolderOperationCompleted;
        
        private System.Threading.SendOrPostCallback ShareViewWithUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback UnshareViewWithUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserNamesforSharedViewOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetViewsSharedToUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserPreferencesOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetUserPreferencesOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAssociatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetAssociatesOperationCompleted;
        
        private System.Threading.SendOrPostCallback RemoveAssociateOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetDomainsOnServerOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetServerVersionOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetTimezoneInformationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrgNameFromDomainOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAdminStatusMessageOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSSOUrlOperationCompleted;
        
        private System.Threading.SendOrPostCallback AssignTasksOperationCompleted;
        
        private System.Threading.SendOrPostCallback AssignTasksExOperationCompleted;
        
        private System.Threading.SendOrPostCallback AssignTaskOperationCompleted;
        
        private System.Threading.SendOrPostCallback AssignQueueTaskOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public Services() {
            this.Url = global::NewUltimusWeb.Properties.Settings.Default.NewUltimusWeb_ClientServices_Services;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event AssignAllCurrentTasksCompletedEventHandler AssignAllCurrentTasksCompleted;
        
        /// <remarks/>
        public event ForwardTasksCompletedEventHandler ForwardTasksCompleted;
        
        /// <remarks/>
        public event AssignToProcExpertCompletedEventHandler AssignToProcExpertCompleted;
        
        /// <remarks/>
        public event TakeBackTaskCompletedEventHandler TakeBackTaskCompleted;
        
        /// <remarks/>
        public event GetFormURLForEditCompletedEventHandler GetFormURLForEditCompleted;
        
        /// <remarks/>
        public event GetFormURLForPreviewCompletedEventHandler GetFormURLForPreviewCompleted;
        
        /// <remarks/>
        public event DeleteTaskCompletedEventHandler DeleteTaskCompleted;
        
        /// <remarks/>
        public event GetForwardableTasksExCompletedEventHandler GetForwardableTasksExCompleted;
        
        /// <remarks/>
        public event GetForwardableTasksCompletedEventHandler GetForwardableTasksCompleted;
        
        /// <remarks/>
        public event SetForwardedTasksCompletedEventHandler SetForwardedTasksCompleted;
        
        /// <remarks/>
        public event GetForwardedTasksCompletedEventHandler GetForwardedTasksCompleted;
        
        /// <remarks/>
        public event PutTaskInQueueCompletedEventHandler PutTaskInQueueCompleted;
        
        /// <remarks/>
        public event GetTaskHelpURLCompletedEventHandler GetTaskHelpURLCompleted;
        
        /// <remarks/>
        public event GetNextQueueTaskCompletedEventHandler GetNextQueueTaskCompleted;
        
        /// <remarks/>
        public event GetNextQueueTaskExCompletedEventHandler GetNextQueueTaskExCompleted;
        
        /// <remarks/>
        public event CheckInTaskCompletedEventHandler CheckInTaskCompleted;
        
        /// <remarks/>
        public event CheckOutTaskCompletedEventHandler CheckOutTaskCompleted;
        
        /// <remarks/>
        public event CanAssignToCompletedEventHandler CanAssignToCompleted;
        
        /// <remarks/>
        public event CanAssignToExCompletedEventHandler CanAssignToExCompleted;
        
        /// <remarks/>
        public event GetTaskCheckOutUserCompletedEventHandler GetTaskCheckOutUserCompleted;
        
        /// <remarks/>
        public event GetStepDefaultFormCompletedEventHandler GetStepDefaultFormCompleted;
        
        /// <remarks/>
        public event GetStepSchemaCompletedEventHandler GetStepSchemaCompleted;
        
        /// <remarks/>
        public event GetTaskDataCompletedEventHandler GetTaskDataCompleted;
        
        /// <remarks/>
        public event SendTaskCompletedEventHandler SendTaskCompleted;
        
        /// <remarks/>
        public event ReturnTaskCompletedEventHandler ReturnTaskCompleted;
        
        /// <remarks/>
        public event SaveTemplateCompletedEventHandler SaveTemplateCompleted;
        
        /// <remarks/>
        public event ExtractFormAndGetURLCompletedEventHandler ExtractFormAndGetURLCompleted;
        
        /// <remarks/>
        public event ExtractFormAndGetURL1CompletedEventHandler ExtractFormAndGetURL1Completed;
        
        /// <remarks/>
        public event GetDetailedIncidentStatusCompletedEventHandler GetDetailedIncidentStatusCompleted;
        
        /// <remarks/>
        public event GetIncidentMemoCompletedEventHandler GetIncidentMemoCompleted;
        
        /// <remarks/>
        public event AbortIncidentCompletedEventHandler AbortIncidentCompleted;
        
        /// <remarks/>
        public event CanAbortCompletedEventHandler CanAbortCompleted;
        
        /// <remarks/>
        public event GetIncidentGraphicalStatusCompletedEventHandler GetIncidentGraphicalStatusCompleted;
        
        /// <remarks/>
        public event GetInitiatorCompletedEventHandler GetInitiatorCompleted;
        
        /// <remarks/>
        public event GetProcessSchemaCompletedEventHandler GetProcessSchemaCompleted;
        
        /// <remarks/>
        public event GetIncidentDataCompletedEventHandler GetIncidentDataCompleted;
        
        /// <remarks/>
        public event GetInstalledProcessesCompletedEventHandler GetInstalledProcessesCompleted;
        
        /// <remarks/>
        public event GetInstalledProcessesByLatestVersionCompletedEventHandler GetInstalledProcessesByLatestVersionCompleted;
        
        /// <remarks/>
        public event GetProcessStepsCompletedEventHandler GetProcessStepsCompleted;
        
        /// <remarks/>
        public event GetProcessHelpURLCompletedEventHandler GetProcessHelpURLCompleted;
        
        /// <remarks/>
        public event CheckProcessRightCompletedEventHandler CheckProcessRightCompleted;
        
        /// <remarks/>
        public event GetDataByViewIDCompletedEventHandler GetDataByViewIDCompleted;
        
        /// <remarks/>
        public event GetDataForViewCompletedEventHandler GetDataForViewCompleted;
        
        /// <remarks/>
        public event GetReportsCompletedEventHandler GetReportsCompleted;
        
        /// <remarks/>
        public event GetUserServerPreferencesCompletedEventHandler GetUserServerPreferencesCompleted;
        
        /// <remarks/>
        public event UpdateServerVisibilityCompletedEventHandler UpdateServerVisibilityCompleted;
        
        /// <remarks/>
        public event UpdateUserCredentialsCompletedEventHandler UpdateUserCredentialsCompleted;
        
        /// <remarks/>
        public event ValidateUserCompletedEventHandler ValidateUserCompleted;
        
        /// <remarks/>
        public event GetAllJobFunctionsOfUserCompletedEventHandler GetAllJobFunctionsOfUserCompleted;
        
        /// <remarks/>
        public event LoginUserCompletedEventHandler LoginUserCompleted;
        
        /// <remarks/>
        public event LogoutUserCompletedEventHandler LogoutUserCompleted;
        
        /// <remarks/>
        public event IsValidSessionIDCompletedEventHandler IsValidSessionIDCompleted;
        
        /// <remarks/>
        public event GetFullNameFromShortNameCompletedEventHandler GetFullNameFromShortNameCompleted;
        
        /// <remarks/>
        public event GetExactCaseUserCompletedEventHandler GetExactCaseUserCompleted;
        
        /// <remarks/>
        public event IsDepartmentMemberCompletedEventHandler IsDepartmentMemberCompleted;
        
        /// <remarks/>
        public event GetDepartmentsListCompletedEventHandler GetDepartmentsListCompleted;
        
        /// <remarks/>
        public event GetUserEmailAddressCompletedEventHandler GetUserEmailAddressCompleted;
        
        /// <remarks/>
        public event SetUserEmailAddressCompletedEventHandler SetUserEmailAddressCompleted;
        
        /// <remarks/>
        public event GetUserPropertiesCompletedEventHandler GetUserPropertiesCompleted;
        
        /// <remarks/>
        public event GetUserGroupsCompletedEventHandler GetUserGroupsCompleted;
        
        /// <remarks/>
        public event GetPersonOrganizationsCompletedEventHandler GetPersonOrganizationsCompleted;
        
        /// <remarks/>
        public event GetFullNamesFromShortNamesCompletedEventHandler GetFullNamesFromShortNamesCompleted;
        
        /// <remarks/>
        public event GetUserSubordinatesCompletedEventHandler GetUserSubordinatesCompleted;
        
        /// <remarks/>
        public event GetUserSubordinatesExCompletedEventHandler GetUserSubordinatesExCompleted;
        
        /// <remarks/>
        public event GetUserSubordinatesForJobFunctionCompletedEventHandler GetUserSubordinatesForJobFunctionCompleted;
        
        /// <remarks/>
        public event IsUserHierarchicallyAboveCompletedEventHandler IsUserHierarchicallyAboveCompleted;
        
        /// <remarks/>
        public event GetUserIDForJobFunctionCompletedEventHandler GetUserIDForJobFunctionCompleted;
        
        /// <remarks/>
        public event CheckUserRightCompletedEventHandler CheckUserRightCompleted;
        
        /// <remarks/>
        public event AreAccessRigthsEnabledCompletedEventHandler AreAccessRigthsEnabledCompleted;
        
        /// <remarks/>
        public event GetUserViewsListCompletedEventHandler GetUserViewsListCompleted;
        
        /// <remarks/>
        public event GetGroupViewsListCompletedEventHandler GetGroupViewsListCompleted;
        
        /// <remarks/>
        public event AddUserViewCompletedEventHandler AddUserViewCompleted;
        
        /// <remarks/>
        public event AddGroupViewCompletedEventHandler AddGroupViewCompleted;
        
        /// <remarks/>
        public event DeleteUserViewCompletedEventHandler DeleteUserViewCompleted;
        
        /// <remarks/>
        public event DeleteGroupViewCompletedEventHandler DeleteGroupViewCompleted;
        
        /// <remarks/>
        public event GetUserViewsForClientCompletedEventHandler GetUserViewsForClientCompleted;
        
        /// <remarks/>
        public event RestoreGenericUserViewsCompletedEventHandler RestoreGenericUserViewsCompleted;
        
        /// <remarks/>
        public event GetGroupViewsCompletedEventHandler GetGroupViewsCompleted;
        
        /// <remarks/>
        public event GetGroupViewCompletedEventHandler GetGroupViewCompleted;
        
        /// <remarks/>
        public event GetViewByIDCompletedEventHandler GetViewByIDCompleted;
        
        /// <remarks/>
        public event UpdateUserViewCompletedEventHandler UpdateUserViewCompleted;
        
        /// <remarks/>
        public event UpdateGroupViewCompletedEventHandler UpdateGroupViewCompleted;
        
        /// <remarks/>
        public event UpdateViewFolderCompletedEventHandler UpdateViewFolderCompleted;
        
        /// <remarks/>
        public event AddViewFolderCompletedEventHandler AddViewFolderCompleted;
        
        /// <remarks/>
        public event DeleteViewFolderCompletedEventHandler DeleteViewFolderCompleted;
        
        /// <remarks/>
        public event UpdateViewFolderNameCompletedEventHandler UpdateViewFolderNameCompleted;
        
        /// <remarks/>
        public event GetUserFolderListCompletedEventHandler GetUserFolderListCompleted;
        
        /// <remarks/>
        public event UpdateViewSequenceNumberInFolderCompletedEventHandler UpdateViewSequenceNumberInFolderCompleted;
        
        /// <remarks/>
        public event ShareViewWithUserCompletedEventHandler ShareViewWithUserCompleted;
        
        /// <remarks/>
        public event UnshareViewWithUserCompletedEventHandler UnshareViewWithUserCompleted;
        
        /// <remarks/>
        public event GetUserNamesforSharedViewCompletedEventHandler GetUserNamesforSharedViewCompleted;
        
        /// <remarks/>
        public event GetViewsSharedToUserCompletedEventHandler GetViewsSharedToUserCompleted;
        
        /// <remarks/>
        public event GetUserPreferencesCompletedEventHandler GetUserPreferencesCompleted;
        
        /// <remarks/>
        public event SetUserPreferencesCompletedEventHandler SetUserPreferencesCompleted;
        
        /// <remarks/>
        public event GetAssociatesCompletedEventHandler GetAssociatesCompleted;
        
        /// <remarks/>
        public event SetAssociatesCompletedEventHandler SetAssociatesCompleted;
        
        /// <remarks/>
        public event RemoveAssociateCompletedEventHandler RemoveAssociateCompleted;
        
        /// <remarks/>
        public event GetDomainsOnServerCompletedEventHandler GetDomainsOnServerCompleted;
        
        /// <remarks/>
        public event GetServerVersionCompletedEventHandler GetServerVersionCompleted;
        
        /// <remarks/>
        public event GetTimezoneInformationCompletedEventHandler GetTimezoneInformationCompleted;
        
        /// <remarks/>
        public event GetOrgNameFromDomainCompletedEventHandler GetOrgNameFromDomainCompleted;
        
        /// <remarks/>
        public event GetAdminStatusMessageCompletedEventHandler GetAdminStatusMessageCompleted;
        
        /// <remarks/>
        public event GetSSOUrlCompletedEventHandler GetSSOUrlCompleted;
        
        /// <remarks/>
        public event AssignTasksCompletedEventHandler AssignTasksCompleted;
        
        /// <remarks/>
        public event AssignTasksExCompletedEventHandler AssignTasksExCompleted;
        
        /// <remarks/>
        public event AssignTaskCompletedEventHandler AssignTaskCompleted;
        
        /// <remarks/>
        public event AssignQueueTaskCompletedEventHandler AssignQueueTaskCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/AssignAllCurrentTasks", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AssignAllCurrentTasks(string strSessionID, string strOrgName, string strAssignToUser, out string strErr) {
            object[] results = this.Invoke("AssignAllCurrentTasks", new object[] {
                        strSessionID,
                        strOrgName,
                        strAssignToUser});
            strErr = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AssignAllCurrentTasksAsync(string strSessionID, string strOrgName, string strAssignToUser) {
            this.AssignAllCurrentTasksAsync(strSessionID, strOrgName, strAssignToUser, null);
        }
        
        /// <remarks/>
        public void AssignAllCurrentTasksAsync(string strSessionID, string strOrgName, string strAssignToUser, object userState) {
            if ((this.AssignAllCurrentTasksOperationCompleted == null)) {
                this.AssignAllCurrentTasksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAssignAllCurrentTasksOperationCompleted);
            }
            this.InvokeAsync("AssignAllCurrentTasks", new object[] {
                        strSessionID,
                        strOrgName,
                        strAssignToUser}, this.AssignAllCurrentTasksOperationCompleted, userState);
        }
        
        private void OnAssignAllCurrentTasksOperationCompleted(object arg) {
            if ((this.AssignAllCurrentTasksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AssignAllCurrentTasksCompleted(this, new AssignAllCurrentTasksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/ForwardTasks", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ForwardTasks(string strSessionID, string strAssignToUser, System.DateTime dtAssignFrom, System.DateTime dtAssignUntil, out string strErr) {
            object[] results = this.Invoke("ForwardTasks", new object[] {
                        strSessionID,
                        strAssignToUser,
                        dtAssignFrom,
                        dtAssignUntil});
            strErr = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ForwardTasksAsync(string strSessionID, string strAssignToUser, System.DateTime dtAssignFrom, System.DateTime dtAssignUntil) {
            this.ForwardTasksAsync(strSessionID, strAssignToUser, dtAssignFrom, dtAssignUntil, null);
        }
        
        /// <remarks/>
        public void ForwardTasksAsync(string strSessionID, string strAssignToUser, System.DateTime dtAssignFrom, System.DateTime dtAssignUntil, object userState) {
            if ((this.ForwardTasksOperationCompleted == null)) {
                this.ForwardTasksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnForwardTasksOperationCompleted);
            }
            this.InvokeAsync("ForwardTasks", new object[] {
                        strSessionID,
                        strAssignToUser,
                        dtAssignFrom,
                        dtAssignUntil}, this.ForwardTasksOperationCompleted, userState);
        }
        
        private void OnForwardTasksOperationCompleted(object arg) {
            if ((this.ForwardTasksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ForwardTasksCompleted(this, new ForwardTasksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/AssignToProcExpert", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AssignToProcExpert(string strSessionID, string strTaskID, string strNotes, out string strErr) {
            object[] results = this.Invoke("AssignToProcExpert", new object[] {
                        strSessionID,
                        strTaskID,
                        strNotes});
            strErr = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AssignToProcExpertAsync(string strSessionID, string strTaskID, string strNotes) {
            this.AssignToProcExpertAsync(strSessionID, strTaskID, strNotes, null);
        }
        
        /// <remarks/>
        public void AssignToProcExpertAsync(string strSessionID, string strTaskID, string strNotes, object userState) {
            if ((this.AssignToProcExpertOperationCompleted == null)) {
                this.AssignToProcExpertOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAssignToProcExpertOperationCompleted);
            }
            this.InvokeAsync("AssignToProcExpert", new object[] {
                        strSessionID,
                        strTaskID,
                        strNotes}, this.AssignToProcExpertOperationCompleted, userState);
        }
        
        private void OnAssignToProcExpertOperationCompleted(object arg) {
            if ((this.AssignToProcExpertCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AssignToProcExpertCompleted(this, new AssignToProcExpertCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/TakeBackTask", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool TakeBackTask(string strSessionID, string strTaskID, out string strErr) {
            object[] results = this.Invoke("TakeBackTask", new object[] {
                        strSessionID,
                        strTaskID});
            strErr = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void TakeBackTaskAsync(string strSessionID, string strTaskID) {
            this.TakeBackTaskAsync(strSessionID, strTaskID, null);
        }
        
        /// <remarks/>
        public void TakeBackTaskAsync(string strSessionID, string strTaskID, object userState) {
            if ((this.TakeBackTaskOperationCompleted == null)) {
                this.TakeBackTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnTakeBackTaskOperationCompleted);
            }
            this.InvokeAsync("TakeBackTask", new object[] {
                        strSessionID,
                        strTaskID}, this.TakeBackTaskOperationCompleted, userState);
        }
        
        private void OnTakeBackTaskOperationCompleted(object arg) {
            if ((this.TakeBackTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.TakeBackTaskCompleted(this, new TakeBackTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/GetFormURLForEdit", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetFormURLForEdit(string strSessionID, string strTaskID, out string strOpenFormURL, out string strErr) {
            object[] results = this.Invoke("GetFormURLForEdit", new object[] {
                        strSessionID,
                        strTaskID});
            strOpenFormURL = ((string)(results[1]));
            strErr = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetFormURLForEditAsync(string strSessionID, string strTaskID) {
            this.GetFormURLForEditAsync(strSessionID, strTaskID, null);
        }
        
        /// <remarks/>
        public void GetFormURLForEditAsync(string strSessionID, string strTaskID, object userState) {
            if ((this.GetFormURLForEditOperationCompleted == null)) {
                this.GetFormURLForEditOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFormURLForEditOperationCompleted);
            }
            this.InvokeAsync("GetFormURLForEdit", new object[] {
                        strSessionID,
                        strTaskID}, this.GetFormURLForEditOperationCompleted, userState);
        }
        
        private void OnGetFormURLForEditOperationCompleted(object arg) {
            if ((this.GetFormURLForEditCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFormURLForEditCompleted(this, new GetFormURLForEditCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/GetFormURLForPreview", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetFormURLForPreview(string strSessionID, string strTaskID, out string strViewFormURL, out string strErr) {
            object[] results = this.Invoke("GetFormURLForPreview", new object[] {
                        strSessionID,
                        strTaskID});
            strViewFormURL = ((string)(results[1]));
            strErr = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetFormURLForPreviewAsync(string strSessionID, string strTaskID) {
            this.GetFormURLForPreviewAsync(strSessionID, strTaskID, null);
        }
        
        /// <remarks/>
        public void GetFormURLForPreviewAsync(string strSessionID, string strTaskID, object userState) {
            if ((this.GetFormURLForPreviewOperationCompleted == null)) {
                this.GetFormURLForPreviewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFormURLForPreviewOperationCompleted);
            }
            this.InvokeAsync("GetFormURLForPreview", new object[] {
                        strSessionID,
                        strTaskID}, this.GetFormURLForPreviewOperationCompleted, userState);
        }
        
        private void OnGetFormURLForPreviewOperationCompleted(object arg) {
            if ((this.GetFormURLForPreviewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFormURLForPreviewCompleted(this, new GetFormURLForPreviewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/DeleteTask", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteTask(string strSessionID, string strTaskID, out string strErr) {
            object[] results = this.Invoke("DeleteTask", new object[] {
                        strSessionID,
                        strTaskID});
            strErr = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteTaskAsync(string strSessionID, string strTaskID) {
            this.DeleteTaskAsync(strSessionID, strTaskID, null);
        }
        
        /// <remarks/>
        public void DeleteTaskAsync(string strSessionID, string strTaskID, object userState) {
            if ((this.DeleteTaskOperationCompleted == null)) {
                this.DeleteTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteTaskOperationCompleted);
            }
            this.InvokeAsync("DeleteTask", new object[] {
                        strSessionID,
                        strTaskID}, this.DeleteTaskOperationCompleted, userState);
        }
        
        private void OnDeleteTaskOperationCompleted(object arg) {
            if ((this.DeleteTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteTaskCompleted(this, new DeleteTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/GetForwardableTasksEx", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetForwardableTasksEx(string strOrgName, string strTaskUser, out ForwardedTask[] arrForwardedTasks, out string strErr) {
            object[] results = this.Invoke("GetForwardableTasksEx", new object[] {
                        strOrgName,
                        strTaskUser});
            arrForwardedTasks = ((ForwardedTask[])(results[1]));
            strErr = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetForwardableTasksExAsync(string strOrgName, string strTaskUser) {
            this.GetForwardableTasksExAsync(strOrgName, strTaskUser, null);
        }
        
        /// <remarks/>
        public void GetForwardableTasksExAsync(string strOrgName, string strTaskUser, object userState) {
            if ((this.GetForwardableTasksExOperationCompleted == null)) {
                this.GetForwardableTasksExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetForwardableTasksExOperationCompleted);
            }
            this.InvokeAsync("GetForwardableTasksEx", new object[] {
                        strOrgName,
                        strTaskUser}, this.GetForwardableTasksExOperationCompleted, userState);
        }
        
        private void OnGetForwardableTasksExOperationCompleted(object arg) {
            if ((this.GetForwardableTasksExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetForwardableTasksExCompleted(this, new GetForwardableTasksExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/GetForwardableTasks", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetForwardableTasks(string strTaskUser, out ForwardedTask[] arrForwardedTasks, out string strErr) {
            object[] results = this.Invoke("GetForwardableTasks", new object[] {
                        strTaskUser});
            arrForwardedTasks = ((ForwardedTask[])(results[1]));
            strErr = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetForwardableTasksAsync(string strTaskUser) {
            this.GetForwardableTasksAsync(strTaskUser, null);
        }
        
        /// <remarks/>
        public void GetForwardableTasksAsync(string strTaskUser, object userState) {
            if ((this.GetForwardableTasksOperationCompleted == null)) {
                this.GetForwardableTasksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetForwardableTasksOperationCompleted);
            }
            this.InvokeAsync("GetForwardableTasks", new object[] {
                        strTaskUser}, this.GetForwardableTasksOperationCompleted, userState);
        }
        
        private void OnGetForwardableTasksOperationCompleted(object arg) {
            if ((this.GetForwardableTasksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetForwardableTasksCompleted(this, new GetForwardableTasksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/SetForwardedTasks", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SetForwardedTasks(string strSessionID, string[] AssignedToUser, string[] ProcessName, string[] StepLabel, string[] StepID, System.DateTime[] AssignedFrom, System.DateTime[] AssignedUntil, out string strErr) {
            object[] results = this.Invoke("SetForwardedTasks", new object[] {
                        strSessionID,
                        AssignedToUser,
                        ProcessName,
                        StepLabel,
                        StepID,
                        AssignedFrom,
                        AssignedUntil});
            strErr = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SetForwardedTasksAsync(string strSessionID, string[] AssignedToUser, string[] ProcessName, string[] StepLabel, string[] StepID, System.DateTime[] AssignedFrom, System.DateTime[] AssignedUntil) {
            this.SetForwardedTasksAsync(strSessionID, AssignedToUser, ProcessName, StepLabel, StepID, AssignedFrom, AssignedUntil, null);
        }
        
        /// <remarks/>
        public void SetForwardedTasksAsync(string strSessionID, string[] AssignedToUser, string[] ProcessName, string[] StepLabel, string[] StepID, System.DateTime[] AssignedFrom, System.DateTime[] AssignedUntil, object userState) {
            if ((this.SetForwardedTasksOperationCompleted == null)) {
                this.SetForwardedTasksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetForwardedTasksOperationCompleted);
            }
            this.InvokeAsync("SetForwardedTasks", new object[] {
                        strSessionID,
                        AssignedToUser,
                        ProcessName,
                        StepLabel,
                        StepID,
                        AssignedFrom,
                        AssignedUntil}, this.SetForwardedTasksOperationCompleted, userState);
        }
        
        private void OnSetForwardedTasksOperationCompleted(object arg) {
            if ((this.SetForwardedTasksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetForwardedTasksCompleted(this, new SetForwardedTasksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/GetForwardedTasks", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetForwardedTasks(string strTaskUser, out string[] strArrAssignedToUser, out string[] ProcessName, out string[] StepLabel, out string[] StepID, out System.DateTime[] AssignedFrom, out System.DateTime[] AssignedUntil, out string strErr) {
            object[] results = this.Invoke("GetForwardedTasks", new object[] {
                        strTaskUser});
            strArrAssignedToUser = ((string[])(results[1]));
            ProcessName = ((string[])(results[2]));
            StepLabel = ((string[])(results[3]));
            StepID = ((string[])(results[4]));
            AssignedFrom = ((System.DateTime[])(results[5]));
            AssignedUntil = ((System.DateTime[])(results[6]));
            strErr = ((string)(results[7]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetForwardedTasksAsync(string strTaskUser) {
            this.GetForwardedTasksAsync(strTaskUser, null);
        }
        
        /// <remarks/>
        public void GetForwardedTasksAsync(string strTaskUser, object userState) {
            if ((this.GetForwardedTasksOperationCompleted == null)) {
                this.GetForwardedTasksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetForwardedTasksOperationCompleted);
            }
            this.InvokeAsync("GetForwardedTasks", new object[] {
                        strTaskUser}, this.GetForwardedTasksOperationCompleted, userState);
        }
        
        private void OnGetForwardedTasksOperationCompleted(object arg) {
            if ((this.GetForwardedTasksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetForwardedTasksCompleted(this, new GetForwardedTasksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/PutTaskInQueue", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool PutTaskInQueue(string strSessionID, string strTaskId, out string strErr) {
            object[] results = this.Invoke("PutTaskInQueue", new object[] {
                        strSessionID,
                        strTaskId});
            strErr = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void PutTaskInQueueAsync(string strSessionID, string strTaskId) {
            this.PutTaskInQueueAsync(strSessionID, strTaskId, null);
        }
        
        /// <remarks/>
        public void PutTaskInQueueAsync(string strSessionID, string strTaskId, object userState) {
            if ((this.PutTaskInQueueOperationCompleted == null)) {
                this.PutTaskInQueueOperationCompleted = new System.Threading.SendOrPostCallback(this.OnPutTaskInQueueOperationCompleted);
            }
            this.InvokeAsync("PutTaskInQueue", new object[] {
                        strSessionID,
                        strTaskId}, this.PutTaskInQueueOperationCompleted, userState);
        }
        
        private void OnPutTaskInQueueOperationCompleted(object arg) {
            if ((this.PutTaskInQueueCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.PutTaskInQueueCompleted(this, new PutTaskInQueueCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/GetTaskHelpURL", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetTaskHelpURL(string strTaskId, out string strHelpURL, out string strErr) {
            object[] results = this.Invoke("GetTaskHelpURL", new object[] {
                        strTaskId});
            strHelpURL = ((string)(results[1]));
            strErr = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetTaskHelpURLAsync(string strTaskId) {
            this.GetTaskHelpURLAsync(strTaskId, null);
        }
        
        /// <remarks/>
        public void GetTaskHelpURLAsync(string strTaskId, object userState) {
            if ((this.GetTaskHelpURLOperationCompleted == null)) {
                this.GetTaskHelpURLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTaskHelpURLOperationCompleted);
            }
            this.InvokeAsync("GetTaskHelpURL", new object[] {
                        strTaskId}, this.GetTaskHelpURLOperationCompleted, userState);
        }
        
        private void OnGetTaskHelpURLOperationCompleted(object arg) {
            if ((this.GetTaskHelpURLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTaskHelpURLCompleted(this, new GetTaskHelpURLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/GetNextQueueTask", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetNextQueueTask(string strUserName, out string strErr) {
            object[] results = this.Invoke("GetNextQueueTask", new object[] {
                        strUserName});
            strErr = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetNextQueueTaskAsync(string strUserName) {
            this.GetNextQueueTaskAsync(strUserName, null);
        }
        
        /// <remarks/>
        public void GetNextQueueTaskAsync(string strUserName, object userState) {
            if ((this.GetNextQueueTaskOperationCompleted == null)) {
                this.GetNextQueueTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNextQueueTaskOperationCompleted);
            }
            this.InvokeAsync("GetNextQueueTask", new object[] {
                        strUserName}, this.GetNextQueueTaskOperationCompleted, userState);
        }
        
        private void OnGetNextQueueTaskOperationCompleted(object arg) {
            if ((this.GetNextQueueTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNextQueueTaskCompleted(this, new GetNextQueueTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/GetNextQueueTaskEx", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetNextQueueTaskEx(string strUserName, out string strProcessName, out uint nProcessVersion, out string strStepID, out string strTaskID, out string strErr) {
            object[] results = this.Invoke("GetNextQueueTaskEx", new object[] {
                        strUserName});
            strProcessName = ((string)(results[1]));
            nProcessVersion = ((uint)(results[2]));
            strStepID = ((string)(results[3]));
            strTaskID = ((string)(results[4]));
            strErr = ((string)(results[5]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetNextQueueTaskExAsync(string strUserName) {
            this.GetNextQueueTaskExAsync(strUserName, null);
        }
        
        /// <remarks/>
        public void GetNextQueueTaskExAsync(string strUserName, object userState) {
            if ((this.GetNextQueueTaskExOperationCompleted == null)) {
                this.GetNextQueueTaskExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetNextQueueTaskExOperationCompleted);
            }
            this.InvokeAsync("GetNextQueueTaskEx", new object[] {
                        strUserName}, this.GetNextQueueTaskExOperationCompleted, userState);
        }
        
        private void OnGetNextQueueTaskExOperationCompleted(object arg) {
            if ((this.GetNextQueueTaskExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetNextQueueTaskExCompleted(this, new GetNextQueueTaskExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/CheckInTask", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckInTask(string strSessionID, string strTaskID, object objXML, out string strErr) {
            object[] results = this.Invoke("CheckInTask", new object[] {
                        strSessionID,
                        strTaskID,
                        objXML});
            strErr = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckInTaskAsync(string strSessionID, string strTaskID, object objXML) {
            this.CheckInTaskAsync(strSessionID, strTaskID, objXML, null);
        }
        
        /// <remarks/>
        public void CheckInTaskAsync(string strSessionID, string strTaskID, object objXML, object userState) {
            if ((this.CheckInTaskOperationCompleted == null)) {
                this.CheckInTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckInTaskOperationCompleted);
            }
            this.InvokeAsync("CheckInTask", new object[] {
                        strSessionID,
                        strTaskID,
                        objXML}, this.CheckInTaskOperationCompleted, userState);
        }
        
        private void OnCheckInTaskOperationCompleted(object arg) {
            if ((this.CheckInTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckInTaskCompleted(this, new CheckInTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/CheckOutTask", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckOutTask(string strSessionID, string strTaskID, out string strErr) {
            object[] results = this.Invoke("CheckOutTask", new object[] {
                        strSessionID,
                        strTaskID});
            strErr = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckOutTaskAsync(string strSessionID, string strTaskID) {
            this.CheckOutTaskAsync(strSessionID, strTaskID, null);
        }
        
        /// <remarks/>
        public void CheckOutTaskAsync(string strSessionID, string strTaskID, object userState) {
            if ((this.CheckOutTaskOperationCompleted == null)) {
                this.CheckOutTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckOutTaskOperationCompleted);
            }
            this.InvokeAsync("CheckOutTask", new object[] {
                        strSessionID,
                        strTaskID}, this.CheckOutTaskOperationCompleted, userState);
        }
        
        private void OnCheckOutTaskOperationCompleted(object arg) {
            if ((this.CheckOutTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckOutTaskCompleted(this, new CheckOutTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/CanAssignTo", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CanAssignTo(string strUser, string strProcess, string strStepLabel, out string strErr) {
            object[] results = this.Invoke("CanAssignTo", new object[] {
                        strUser,
                        strProcess,
                        strStepLabel});
            strErr = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CanAssignToAsync(string strUser, string strProcess, string strStepLabel) {
            this.CanAssignToAsync(strUser, strProcess, strStepLabel, null);
        }
        
        /// <remarks/>
        public void CanAssignToAsync(string strUser, string strProcess, string strStepLabel, object userState) {
            if ((this.CanAssignToOperationCompleted == null)) {
                this.CanAssignToOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCanAssignToOperationCompleted);
            }
            this.InvokeAsync("CanAssignTo", new object[] {
                        strUser,
                        strProcess,
                        strStepLabel}, this.CanAssignToOperationCompleted, userState);
        }
        
        private void OnCanAssignToOperationCompleted(object arg) {
            if ((this.CanAssignToCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CanAssignToCompleted(this, new CanAssignToCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/CanAssignToEx", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CanAssignToEx(string strUser, string strProcess, string strStepLabel, System.DateTime FromDate, System.DateTime Todate, out string strErr) {
            object[] results = this.Invoke("CanAssignToEx", new object[] {
                        strUser,
                        strProcess,
                        strStepLabel,
                        FromDate,
                        Todate});
            strErr = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CanAssignToExAsync(string strUser, string strProcess, string strStepLabel, System.DateTime FromDate, System.DateTime Todate) {
            this.CanAssignToExAsync(strUser, strProcess, strStepLabel, FromDate, Todate, null);
        }
        
        /// <remarks/>
        public void CanAssignToExAsync(string strUser, string strProcess, string strStepLabel, System.DateTime FromDate, System.DateTime Todate, object userState) {
            if ((this.CanAssignToExOperationCompleted == null)) {
                this.CanAssignToExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCanAssignToExOperationCompleted);
            }
            this.InvokeAsync("CanAssignToEx", new object[] {
                        strUser,
                        strProcess,
                        strStepLabel,
                        FromDate,
                        Todate}, this.CanAssignToExOperationCompleted, userState);
        }
        
        private void OnCanAssignToExOperationCompleted(object arg) {
            if ((this.CanAssignToExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CanAssignToExCompleted(this, new CanAssignToExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/GetTaskCheckOutUser", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetTaskCheckOutUser(string strTaskID, out string strTaskCheckOutUser, out string strErr) {
            object[] results = this.Invoke("GetTaskCheckOutUser", new object[] {
                        strTaskID});
            strTaskCheckOutUser = ((string)(results[1]));
            strErr = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetTaskCheckOutUserAsync(string strTaskID) {
            this.GetTaskCheckOutUserAsync(strTaskID, null);
        }
        
        /// <remarks/>
        public void GetTaskCheckOutUserAsync(string strTaskID, object userState) {
            if ((this.GetTaskCheckOutUserOperationCompleted == null)) {
                this.GetTaskCheckOutUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTaskCheckOutUserOperationCompleted);
            }
            this.InvokeAsync("GetTaskCheckOutUser", new object[] {
                        strTaskID}, this.GetTaskCheckOutUserOperationCompleted, userState);
        }
        
        private void OnGetTaskCheckOutUserOperationCompleted(object arg) {
            if ((this.GetTaskCheckOutUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTaskCheckOutUserCompleted(this, new GetTaskCheckOutUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/GetStepDefaultForm", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetStepDefaultForm(string strProcessName, uint nVersion, string strStepID, out string strDefaultForm, out string strErr) {
            object[] results = this.Invoke("GetStepDefaultForm", new object[] {
                        strProcessName,
                        nVersion,
                        strStepID});
            strDefaultForm = ((string)(results[1]));
            strErr = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetStepDefaultFormAsync(string strProcessName, uint nVersion, string strStepID) {
            this.GetStepDefaultFormAsync(strProcessName, nVersion, strStepID, null);
        }
        
        /// <remarks/>
        public void GetStepDefaultFormAsync(string strProcessName, uint nVersion, string strStepID, object userState) {
            if ((this.GetStepDefaultFormOperationCompleted == null)) {
                this.GetStepDefaultFormOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStepDefaultFormOperationCompleted);
            }
            this.InvokeAsync("GetStepDefaultForm", new object[] {
                        strProcessName,
                        nVersion,
                        strStepID}, this.GetStepDefaultFormOperationCompleted, userState);
        }
        
        private void OnGetStepDefaultFormOperationCompleted(object arg) {
            if ((this.GetStepDefaultFormCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStepDefaultFormCompleted(this, new GetStepDefaultFormCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/GetStepSchema", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetStepSchema(string strSessionID, string strProcessName, uint uiProcessVersion, string strStepName, out SchemaFile[] listSchemas, out string strStepDefaultData, out string strErr) {
            object[] results = this.Invoke("GetStepSchema", new object[] {
                        strSessionID,
                        strProcessName,
                        uiProcessVersion,
                        strStepName});
            listSchemas = ((SchemaFile[])(results[1]));
            strStepDefaultData = ((string)(results[2]));
            strErr = ((string)(results[3]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetStepSchemaAsync(string strSessionID, string strProcessName, uint uiProcessVersion, string strStepName) {
            this.GetStepSchemaAsync(strSessionID, strProcessName, uiProcessVersion, strStepName, null);
        }
        
        /// <remarks/>
        public void GetStepSchemaAsync(string strSessionID, string strProcessName, uint uiProcessVersion, string strStepName, object userState) {
            if ((this.GetStepSchemaOperationCompleted == null)) {
                this.GetStepSchemaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetStepSchemaOperationCompleted);
            }
            this.InvokeAsync("GetStepSchema", new object[] {
                        strSessionID,
                        strProcessName,
                        uiProcessVersion,
                        strStepName}, this.GetStepSchemaOperationCompleted, userState);
        }
        
        private void OnGetStepSchemaOperationCompleted(object arg) {
            if ((this.GetStepSchemaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetStepSchemaCompleted(this, new GetStepSchemaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/GetTaskData", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetTaskData(string strSessionID, string strTaskID, out string strXML, out string strErr) {
            object[] results = this.Invoke("GetTaskData", new object[] {
                        strSessionID,
                        strTaskID});
            strXML = ((string)(results[1]));
            strErr = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetTaskDataAsync(string strSessionID, string strTaskID) {
            this.GetTaskDataAsync(strSessionID, strTaskID, null);
        }
        
        /// <remarks/>
        public void GetTaskDataAsync(string strSessionID, string strTaskID, object userState) {
            if ((this.GetTaskDataOperationCompleted == null)) {
                this.GetTaskDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTaskDataOperationCompleted);
            }
            this.InvokeAsync("GetTaskData", new object[] {
                        strSessionID,
                        strTaskID}, this.GetTaskDataOperationCompleted, userState);
        }
        
        private void OnGetTaskDataOperationCompleted(object arg) {
            if ((this.GetTaskDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTaskDataCompleted(this, new GetTaskDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/SendTask", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SendTask(string strSessionID, string strTaskID, string strSummary, string strMemo, string strXML, bool bValidateXML, bool bDisableAbort, uint uiPriority, ref int nIncidentNo, out string strErr) {
            object[] results = this.Invoke("SendTask", new object[] {
                        strSessionID,
                        strTaskID,
                        strSummary,
                        strMemo,
                        strXML,
                        bValidateXML,
                        bDisableAbort,
                        uiPriority,
                        nIncidentNo});
            nIncidentNo = ((int)(results[1]));
            strErr = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SendTaskAsync(string strSessionID, string strTaskID, string strSummary, string strMemo, string strXML, bool bValidateXML, bool bDisableAbort, uint uiPriority, int nIncidentNo) {
            this.SendTaskAsync(strSessionID, strTaskID, strSummary, strMemo, strXML, bValidateXML, bDisableAbort, uiPriority, nIncidentNo, null);
        }
        
        /// <remarks/>
        public void SendTaskAsync(string strSessionID, string strTaskID, string strSummary, string strMemo, string strXML, bool bValidateXML, bool bDisableAbort, uint uiPriority, int nIncidentNo, object userState) {
            if ((this.SendTaskOperationCompleted == null)) {
                this.SendTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendTaskOperationCompleted);
            }
            this.InvokeAsync("SendTask", new object[] {
                        strSessionID,
                        strTaskID,
                        strSummary,
                        strMemo,
                        strXML,
                        bValidateXML,
                        bDisableAbort,
                        uiPriority,
                        nIncidentNo}, this.SendTaskOperationCompleted, userState);
        }
        
        private void OnSendTaskOperationCompleted(object arg) {
            if ((this.SendTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendTaskCompleted(this, new SendTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/ReturnTask", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ReturnTask(string strSessionID, string strTaskID, string strSummary, string strMemo, string strXML, bool bValidateXML, bool bDisableAbort, uint uiPriority, out string strErr) {
            object[] results = this.Invoke("ReturnTask", new object[] {
                        strSessionID,
                        strTaskID,
                        strSummary,
                        strMemo,
                        strXML,
                        bValidateXML,
                        bDisableAbort,
                        uiPriority});
            strErr = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ReturnTaskAsync(string strSessionID, string strTaskID, string strSummary, string strMemo, string strXML, bool bValidateXML, bool bDisableAbort, uint uiPriority) {
            this.ReturnTaskAsync(strSessionID, strTaskID, strSummary, strMemo, strXML, bValidateXML, bDisableAbort, uiPriority, null);
        }
        
        /// <remarks/>
        public void ReturnTaskAsync(string strSessionID, string strTaskID, string strSummary, string strMemo, string strXML, bool bValidateXML, bool bDisableAbort, uint uiPriority, object userState) {
            if ((this.ReturnTaskOperationCompleted == null)) {
                this.ReturnTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnReturnTaskOperationCompleted);
            }
            this.InvokeAsync("ReturnTask", new object[] {
                        strSessionID,
                        strTaskID,
                        strSummary,
                        strMemo,
                        strXML,
                        bValidateXML,
                        bDisableAbort,
                        uiPriority}, this.ReturnTaskOperationCompleted, userState);
        }
        
        private void OnReturnTaskOperationCompleted(object arg) {
            if ((this.ReturnTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ReturnTaskCompleted(this, new ReturnTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/SaveTemplate", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SaveTemplate(string strSessionID, string strTaskID, string strSummary, string strXML, out string strError) {
            object[] results = this.Invoke("SaveTemplate", new object[] {
                        strSessionID,
                        strTaskID,
                        strSummary,
                        strXML});
            strError = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SaveTemplateAsync(string strSessionID, string strTaskID, string strSummary, string strXML) {
            this.SaveTemplateAsync(strSessionID, strTaskID, strSummary, strXML, null);
        }
        
        /// <remarks/>
        public void SaveTemplateAsync(string strSessionID, string strTaskID, string strSummary, string strXML, object userState) {
            if ((this.SaveTemplateOperationCompleted == null)) {
                this.SaveTemplateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSaveTemplateOperationCompleted);
            }
            this.InvokeAsync("SaveTemplate", new object[] {
                        strSessionID,
                        strTaskID,
                        strSummary,
                        strXML}, this.SaveTemplateOperationCompleted, userState);
        }
        
        private void OnSaveTemplateOperationCompleted(object arg) {
            if ((this.SaveTemplateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SaveTemplateCompleted(this, new SaveTemplateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/ExtractFormAndGetURL", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ExtractFormAndGetURL(string strSessionID, string strTaskID, string strInfo, ref byte pbURLorData, out object objURLorData, out string pstrDataType, out string strFormType, out string strErr) {
            object[] results = this.Invoke("ExtractFormAndGetURL", new object[] {
                        strSessionID,
                        strTaskID,
                        strInfo,
                        pbURLorData});
            pbURLorData = ((byte)(results[1]));
            objURLorData = ((object)(results[2]));
            pstrDataType = ((string)(results[3]));
            strFormType = ((string)(results[4]));
            strErr = ((string)(results[5]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ExtractFormAndGetURLAsync(string strSessionID, string strTaskID, string strInfo, byte pbURLorData) {
            this.ExtractFormAndGetURLAsync(strSessionID, strTaskID, strInfo, pbURLorData, null);
        }
        
        /// <remarks/>
        public void ExtractFormAndGetURLAsync(string strSessionID, string strTaskID, string strInfo, byte pbURLorData, object userState) {
            if ((this.ExtractFormAndGetURLOperationCompleted == null)) {
                this.ExtractFormAndGetURLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnExtractFormAndGetURLOperationCompleted);
            }
            this.InvokeAsync("ExtractFormAndGetURL", new object[] {
                        strSessionID,
                        strTaskID,
                        strInfo,
                        pbURLorData}, this.ExtractFormAndGetURLOperationCompleted, userState);
        }
        
        private void OnExtractFormAndGetURLOperationCompleted(object arg) {
            if ((this.ExtractFormAndGetURLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExtractFormAndGetURLCompleted(this, new ExtractFormAndGetURLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.WebMethodAttribute(MessageName="ExtractFormAndGetURL1")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/ExtractFormAndGetURLWithViewID", RequestElementName="ExtractFormAndGetURLWithViewID", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseElementName="ExtractFormAndGetURLWithViewIDResponse", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute("ExtractFormAndGetURLWithViewIDResult")]
        public bool ExtractFormAndGetURL(string strSessionID, string strTaskID, string strInfo, string strViewId, ref byte pbURLorData, out object objURLorData, out string pstrDataType, out string strFormType, out string strErr) {
            object[] results = this.Invoke("ExtractFormAndGetURL1", new object[] {
                        strSessionID,
                        strTaskID,
                        strInfo,
                        strViewId,
                        pbURLorData});
            pbURLorData = ((byte)(results[1]));
            objURLorData = ((object)(results[2]));
            pstrDataType = ((string)(results[3]));
            strFormType = ((string)(results[4]));
            strErr = ((string)(results[5]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ExtractFormAndGetURL1Async(string strSessionID, string strTaskID, string strInfo, string strViewId, byte pbURLorData) {
            this.ExtractFormAndGetURL1Async(strSessionID, strTaskID, strInfo, strViewId, pbURLorData, null);
        }
        
        /// <remarks/>
        public void ExtractFormAndGetURL1Async(string strSessionID, string strTaskID, string strInfo, string strViewId, byte pbURLorData, object userState) {
            if ((this.ExtractFormAndGetURL1OperationCompleted == null)) {
                this.ExtractFormAndGetURL1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnExtractFormAndGetURL1OperationCompleted);
            }
            this.InvokeAsync("ExtractFormAndGetURL1", new object[] {
                        strSessionID,
                        strTaskID,
                        strInfo,
                        strViewId,
                        pbURLorData}, this.ExtractFormAndGetURL1OperationCompleted, userState);
        }
        
        private void OnExtractFormAndGetURL1OperationCompleted(object arg) {
            if ((this.ExtractFormAndGetURL1Completed != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ExtractFormAndGetURL1Completed(this, new ExtractFormAndGetURL1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/GetDetailedIncidentStatus", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetDetailedIncidentStatus(string strProcessName, uint lIncidentNo, out IncidentStatus objIncidentStatus, out string strErr) {
            object[] results = this.Invoke("GetDetailedIncidentStatus", new object[] {
                        strProcessName,
                        lIncidentNo});
            objIncidentStatus = ((IncidentStatus)(results[1]));
            strErr = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetDetailedIncidentStatusAsync(string strProcessName, uint lIncidentNo) {
            this.GetDetailedIncidentStatusAsync(strProcessName, lIncidentNo, null);
        }
        
        /// <remarks/>
        public void GetDetailedIncidentStatusAsync(string strProcessName, uint lIncidentNo, object userState) {
            if ((this.GetDetailedIncidentStatusOperationCompleted == null)) {
                this.GetDetailedIncidentStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDetailedIncidentStatusOperationCompleted);
            }
            this.InvokeAsync("GetDetailedIncidentStatus", new object[] {
                        strProcessName,
                        lIncidentNo}, this.GetDetailedIncidentStatusOperationCompleted, userState);
        }
        
        private void OnGetDetailedIncidentStatusOperationCompleted(object arg) {
            if ((this.GetDetailedIncidentStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDetailedIncidentStatusCompleted(this, new GetDetailedIncidentStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/GetIncidentMemo", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetIncidentMemo(string strProcessName, uint uiIncidentNo, out IncidentMemo objIncidentMemo, out string strErr) {
            object[] results = this.Invoke("GetIncidentMemo", new object[] {
                        strProcessName,
                        uiIncidentNo});
            objIncidentMemo = ((IncidentMemo)(results[1]));
            strErr = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetIncidentMemoAsync(string strProcessName, uint uiIncidentNo) {
            this.GetIncidentMemoAsync(strProcessName, uiIncidentNo, null);
        }
        
        /// <remarks/>
        public void GetIncidentMemoAsync(string strProcessName, uint uiIncidentNo, object userState) {
            if ((this.GetIncidentMemoOperationCompleted == null)) {
                this.GetIncidentMemoOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetIncidentMemoOperationCompleted);
            }
            this.InvokeAsync("GetIncidentMemo", new object[] {
                        strProcessName,
                        uiIncidentNo}, this.GetIncidentMemoOperationCompleted, userState);
        }
        
        private void OnGetIncidentMemoOperationCompleted(object arg) {
            if ((this.GetIncidentMemoCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetIncidentMemoCompleted(this, new GetIncidentMemoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/AbortIncident", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AbortIncident(string strSessionID, string strProcessName, uint uiIncidentNo, string strAbortReason, out string strErr) {
            object[] results = this.Invoke("AbortIncident", new object[] {
                        strSessionID,
                        strProcessName,
                        uiIncidentNo,
                        strAbortReason});
            strErr = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AbortIncidentAsync(string strSessionID, string strProcessName, uint uiIncidentNo, string strAbortReason) {
            this.AbortIncidentAsync(strSessionID, strProcessName, uiIncidentNo, strAbortReason, null);
        }
        
        /// <remarks/>
        public void AbortIncidentAsync(string strSessionID, string strProcessName, uint uiIncidentNo, string strAbortReason, object userState) {
            if ((this.AbortIncidentOperationCompleted == null)) {
                this.AbortIncidentOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAbortIncidentOperationCompleted);
            }
            this.InvokeAsync("AbortIncident", new object[] {
                        strSessionID,
                        strProcessName,
                        uiIncidentNo,
                        strAbortReason}, this.AbortIncidentOperationCompleted, userState);
        }
        
        private void OnAbortIncidentOperationCompleted(object arg) {
            if ((this.AbortIncidentCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AbortIncidentCompleted(this, new AbortIncidentCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/CanAbort", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CanAbort(string strProcessName, uint lIncidentNo, out bool bAbort, out string strErr) {
            object[] results = this.Invoke("CanAbort", new object[] {
                        strProcessName,
                        lIncidentNo});
            bAbort = ((bool)(results[1]));
            strErr = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CanAbortAsync(string strProcessName, uint lIncidentNo) {
            this.CanAbortAsync(strProcessName, lIncidentNo, null);
        }
        
        /// <remarks/>
        public void CanAbortAsync(string strProcessName, uint lIncidentNo, object userState) {
            if ((this.CanAbortOperationCompleted == null)) {
                this.CanAbortOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCanAbortOperationCompleted);
            }
            this.InvokeAsync("CanAbort", new object[] {
                        strProcessName,
                        lIncidentNo}, this.CanAbortOperationCompleted, userState);
        }
        
        private void OnCanAbortOperationCompleted(object arg) {
            if ((this.CanAbortCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CanAbortCompleted(this, new CanAbortCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/GetIncidentGraphicalStatus", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetIncidentGraphicalStatus(string strProcessName, uint uiIncidentNo, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] out byte[] bytesGif, out string strErr) {
            object[] results = this.Invoke("GetIncidentGraphicalStatus", new object[] {
                        strProcessName,
                        uiIncidentNo});
            bytesGif = ((byte[])(results[1]));
            strErr = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetIncidentGraphicalStatusAsync(string strProcessName, uint uiIncidentNo) {
            this.GetIncidentGraphicalStatusAsync(strProcessName, uiIncidentNo, null);
        }
        
        /// <remarks/>
        public void GetIncidentGraphicalStatusAsync(string strProcessName, uint uiIncidentNo, object userState) {
            if ((this.GetIncidentGraphicalStatusOperationCompleted == null)) {
                this.GetIncidentGraphicalStatusOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetIncidentGraphicalStatusOperationCompleted);
            }
            this.InvokeAsync("GetIncidentGraphicalStatus", new object[] {
                        strProcessName,
                        uiIncidentNo}, this.GetIncidentGraphicalStatusOperationCompleted, userState);
        }
        
        private void OnGetIncidentGraphicalStatusOperationCompleted(object arg) {
            if ((this.GetIncidentGraphicalStatusCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetIncidentGraphicalStatusCompleted(this, new GetIncidentGraphicalStatusCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/GetInitiator", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetInitiator(string strProcessName, uint dwProcessVersion, uint uiIncidentNo, out string strInitiator, out string strErr) {
            object[] results = this.Invoke("GetInitiator", new object[] {
                        strProcessName,
                        dwProcessVersion,
                        uiIncidentNo});
            strInitiator = ((string)(results[1]));
            strErr = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetInitiatorAsync(string strProcessName, uint dwProcessVersion, uint uiIncidentNo) {
            this.GetInitiatorAsync(strProcessName, dwProcessVersion, uiIncidentNo, null);
        }
        
        /// <remarks/>
        public void GetInitiatorAsync(string strProcessName, uint dwProcessVersion, uint uiIncidentNo, object userState) {
            if ((this.GetInitiatorOperationCompleted == null)) {
                this.GetInitiatorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInitiatorOperationCompleted);
            }
            this.InvokeAsync("GetInitiator", new object[] {
                        strProcessName,
                        dwProcessVersion,
                        uiIncidentNo}, this.GetInitiatorOperationCompleted, userState);
        }
        
        private void OnGetInitiatorOperationCompleted(object arg) {
            if ((this.GetInitiatorCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInitiatorCompleted(this, new GetInitiatorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/GetProcessSchema", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetProcessSchema(string strSessionID, string strProcessName, uint uiProcessVersion, out SchemaFile[] listSchemas, out string strProcessDefaultData, out string strErr) {
            object[] results = this.Invoke("GetProcessSchema", new object[] {
                        strSessionID,
                        strProcessName,
                        uiProcessVersion});
            listSchemas = ((SchemaFile[])(results[1]));
            strProcessDefaultData = ((string)(results[2]));
            strErr = ((string)(results[3]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetProcessSchemaAsync(string strSessionID, string strProcessName, uint uiProcessVersion) {
            this.GetProcessSchemaAsync(strSessionID, strProcessName, uiProcessVersion, null);
        }
        
        /// <remarks/>
        public void GetProcessSchemaAsync(string strSessionID, string strProcessName, uint uiProcessVersion, object userState) {
            if ((this.GetProcessSchemaOperationCompleted == null)) {
                this.GetProcessSchemaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProcessSchemaOperationCompleted);
            }
            this.InvokeAsync("GetProcessSchema", new object[] {
                        strSessionID,
                        strProcessName,
                        uiProcessVersion}, this.GetProcessSchemaOperationCompleted, userState);
        }
        
        private void OnGetProcessSchemaOperationCompleted(object arg) {
            if ((this.GetProcessSchemaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProcessSchemaCompleted(this, new GetProcessSchemaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/GetIncidentData", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetIncidentData(string strSessionID, string strProcessName, uint uiIncidentNo, out string strXML, out string strErr) {
            object[] results = this.Invoke("GetIncidentData", new object[] {
                        strSessionID,
                        strProcessName,
                        uiIncidentNo});
            strXML = ((string)(results[1]));
            strErr = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetIncidentDataAsync(string strSessionID, string strProcessName, uint uiIncidentNo) {
            this.GetIncidentDataAsync(strSessionID, strProcessName, uiIncidentNo, null);
        }
        
        /// <remarks/>
        public void GetIncidentDataAsync(string strSessionID, string strProcessName, uint uiIncidentNo, object userState) {
            if ((this.GetIncidentDataOperationCompleted == null)) {
                this.GetIncidentDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetIncidentDataOperationCompleted);
            }
            this.InvokeAsync("GetIncidentData", new object[] {
                        strSessionID,
                        strProcessName,
                        uiIncidentNo}, this.GetIncidentDataOperationCompleted, userState);
        }
        
        private void OnGetIncidentDataOperationCompleted(object arg) {
            if ((this.GetIncidentDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetIncidentDataCompleted(this, new GetIncidentDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/GetInstalledProcesses", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetInstalledProcesses(out InstalledProcess[] listInstalledProcesses, out string strErr) {
            object[] results = this.Invoke("GetInstalledProcesses", new object[0]);
            listInstalledProcesses = ((InstalledProcess[])(results[1]));
            strErr = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetInstalledProcessesAsync() {
            this.GetInstalledProcessesAsync(null);
        }
        
        /// <remarks/>
        public void GetInstalledProcessesAsync(object userState) {
            if ((this.GetInstalledProcessesOperationCompleted == null)) {
                this.GetInstalledProcessesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInstalledProcessesOperationCompleted);
            }
            this.InvokeAsync("GetInstalledProcesses", new object[0], this.GetInstalledProcessesOperationCompleted, userState);
        }
        
        private void OnGetInstalledProcessesOperationCompleted(object arg) {
            if ((this.GetInstalledProcessesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInstalledProcessesCompleted(this, new GetInstalledProcessesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/GetInstalledProcessesByLatestVersion", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetInstalledProcessesByLatestVersion(out InstalledProcess[] listInstalledProcesses, out string strErr) {
            object[] results = this.Invoke("GetInstalledProcessesByLatestVersion", new object[0]);
            listInstalledProcesses = ((InstalledProcess[])(results[1]));
            strErr = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetInstalledProcessesByLatestVersionAsync() {
            this.GetInstalledProcessesByLatestVersionAsync(null);
        }
        
        /// <remarks/>
        public void GetInstalledProcessesByLatestVersionAsync(object userState) {
            if ((this.GetInstalledProcessesByLatestVersionOperationCompleted == null)) {
                this.GetInstalledProcessesByLatestVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInstalledProcessesByLatestVersionOperationCompleted);
            }
            this.InvokeAsync("GetInstalledProcessesByLatestVersion", new object[0], this.GetInstalledProcessesByLatestVersionOperationCompleted, userState);
        }
        
        private void OnGetInstalledProcessesByLatestVersionOperationCompleted(object arg) {
            if ((this.GetInstalledProcessesByLatestVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInstalledProcessesByLatestVersionCompleted(this, new GetInstalledProcessesByLatestVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/GetProcessSteps", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetProcessSteps(string strProcessName, uint lProcessVersion, out string[] listSteps, out string strErr) {
            object[] results = this.Invoke("GetProcessSteps", new object[] {
                        strProcessName,
                        lProcessVersion});
            listSteps = ((string[])(results[1]));
            strErr = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetProcessStepsAsync(string strProcessName, uint lProcessVersion) {
            this.GetProcessStepsAsync(strProcessName, lProcessVersion, null);
        }
        
        /// <remarks/>
        public void GetProcessStepsAsync(string strProcessName, uint lProcessVersion, object userState) {
            if ((this.GetProcessStepsOperationCompleted == null)) {
                this.GetProcessStepsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProcessStepsOperationCompleted);
            }
            this.InvokeAsync("GetProcessSteps", new object[] {
                        strProcessName,
                        lProcessVersion}, this.GetProcessStepsOperationCompleted, userState);
        }
        
        private void OnGetProcessStepsOperationCompleted(object arg) {
            if ((this.GetProcessStepsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProcessStepsCompleted(this, new GetProcessStepsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/GetProcessHelpURL", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetProcessHelpURL(string strProcessName, uint uiIncidentNo, out string strHelpURL, out string strErr) {
            object[] results = this.Invoke("GetProcessHelpURL", new object[] {
                        strProcessName,
                        uiIncidentNo});
            strHelpURL = ((string)(results[1]));
            strErr = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetProcessHelpURLAsync(string strProcessName, uint uiIncidentNo) {
            this.GetProcessHelpURLAsync(strProcessName, uiIncidentNo, null);
        }
        
        /// <remarks/>
        public void GetProcessHelpURLAsync(string strProcessName, uint uiIncidentNo, object userState) {
            if ((this.GetProcessHelpURLOperationCompleted == null)) {
                this.GetProcessHelpURLOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetProcessHelpURLOperationCompleted);
            }
            this.InvokeAsync("GetProcessHelpURL", new object[] {
                        strProcessName,
                        uiIncidentNo}, this.GetProcessHelpURLOperationCompleted, userState);
        }
        
        private void OnGetProcessHelpURLOperationCompleted(object arg) {
            if ((this.GetProcessHelpURLCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetProcessHelpURLCompleted(this, new GetProcessHelpURLCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/CheckProcessRight", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckProcessRight(ProcessRIGHTS right, string strProcess, string strUserName, out bool bHasRight, out string strErr) {
            object[] results = this.Invoke("CheckProcessRight", new object[] {
                        right,
                        strProcess,
                        strUserName});
            bHasRight = ((bool)(results[1]));
            strErr = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckProcessRightAsync(ProcessRIGHTS right, string strProcess, string strUserName) {
            this.CheckProcessRightAsync(right, strProcess, strUserName, null);
        }
        
        /// <remarks/>
        public void CheckProcessRightAsync(ProcessRIGHTS right, string strProcess, string strUserName, object userState) {
            if ((this.CheckProcessRightOperationCompleted == null)) {
                this.CheckProcessRightOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckProcessRightOperationCompleted);
            }
            this.InvokeAsync("CheckProcessRight", new object[] {
                        right,
                        strProcess,
                        strUserName}, this.CheckProcessRightOperationCompleted, userState);
        }
        
        private void OnCheckProcessRightOperationCompleted(object arg) {
            if ((this.CheckProcessRightCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckProcessRightCompleted(this, new CheckProcessRightCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/GetDataByViewID", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetDataByViewID(string strSessionID, string strViewID, out System.Xml.XmlNode xmlNode, out string strErr) {
            object[] results = this.Invoke("GetDataByViewID", new object[] {
                        strSessionID,
                        strViewID});
            xmlNode = ((System.Xml.XmlNode)(results[1]));
            strErr = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataByViewIDAsync(string strSessionID, string strViewID) {
            this.GetDataByViewIDAsync(strSessionID, strViewID, null);
        }
        
        /// <remarks/>
        public void GetDataByViewIDAsync(string strSessionID, string strViewID, object userState) {
            if ((this.GetDataByViewIDOperationCompleted == null)) {
                this.GetDataByViewIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataByViewIDOperationCompleted);
            }
            this.InvokeAsync("GetDataByViewID", new object[] {
                        strSessionID,
                        strViewID}, this.GetDataByViewIDOperationCompleted, userState);
        }
        
        private void OnGetDataByViewIDOperationCompleted(object arg) {
            if ((this.GetDataByViewIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataByViewIDCompleted(this, new GetDataByViewIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/GetDataForView", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetDataForView(string strSessionID, object ObjViewInfo, out System.Xml.XmlNode xmlNode, out string strErr) {
            object[] results = this.Invoke("GetDataForView", new object[] {
                        strSessionID,
                        ObjViewInfo});
            xmlNode = ((System.Xml.XmlNode)(results[1]));
            strErr = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetDataForViewAsync(string strSessionID, object ObjViewInfo) {
            this.GetDataForViewAsync(strSessionID, ObjViewInfo, null);
        }
        
        /// <remarks/>
        public void GetDataForViewAsync(string strSessionID, object ObjViewInfo, object userState) {
            if ((this.GetDataForViewOperationCompleted == null)) {
                this.GetDataForViewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDataForViewOperationCompleted);
            }
            this.InvokeAsync("GetDataForView", new object[] {
                        strSessionID,
                        ObjViewInfo}, this.GetDataForViewOperationCompleted, userState);
        }
        
        private void OnGetDataForViewOperationCompleted(object arg) {
            if ((this.GetDataForViewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDataForViewCompleted(this, new GetDataForViewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/GetReports", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetReports(string strSessionID, string strOrgName, out string[] strReportIDs, out string[] strReportsName, out string strErr) {
            object[] results = this.Invoke("GetReports", new object[] {
                        strSessionID,
                        strOrgName});
            strReportIDs = ((string[])(results[1]));
            strReportsName = ((string[])(results[2]));
            strErr = ((string)(results[3]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetReportsAsync(string strSessionID, string strOrgName) {
            this.GetReportsAsync(strSessionID, strOrgName, null);
        }
        
        /// <remarks/>
        public void GetReportsAsync(string strSessionID, string strOrgName, object userState) {
            if ((this.GetReportsOperationCompleted == null)) {
                this.GetReportsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetReportsOperationCompleted);
            }
            this.InvokeAsync("GetReports", new object[] {
                        strSessionID,
                        strOrgName}, this.GetReportsOperationCompleted, userState);
        }
        
        private void OnGetReportsOperationCompleted(object arg) {
            if ((this.GetReportsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetReportsCompleted(this, new GetReportsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/GetUserServerPreferences", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetUserServerPreferences(string strSessionID, out UserServerPreference[] arrUserServerPrefs, out string strErr) {
            object[] results = this.Invoke("GetUserServerPreferences", new object[] {
                        strSessionID});
            arrUserServerPrefs = ((UserServerPreference[])(results[1]));
            strErr = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserServerPreferencesAsync(string strSessionID) {
            this.GetUserServerPreferencesAsync(strSessionID, null);
        }
        
        /// <remarks/>
        public void GetUserServerPreferencesAsync(string strSessionID, object userState) {
            if ((this.GetUserServerPreferencesOperationCompleted == null)) {
                this.GetUserServerPreferencesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserServerPreferencesOperationCompleted);
            }
            this.InvokeAsync("GetUserServerPreferences", new object[] {
                        strSessionID}, this.GetUserServerPreferencesOperationCompleted, userState);
        }
        
        private void OnGetUserServerPreferencesOperationCompleted(object arg) {
            if ((this.GetUserServerPreferencesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserServerPreferencesCompleted(this, new GetUserServerPreferencesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/UpdateServerVisibility", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateServerVisibility(string strSessionID, string strServerName, bool bVisible, out string strErr) {
            object[] results = this.Invoke("UpdateServerVisibility", new object[] {
                        strSessionID,
                        strServerName,
                        bVisible});
            strErr = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateServerVisibilityAsync(string strSessionID, string strServerName, bool bVisible) {
            this.UpdateServerVisibilityAsync(strSessionID, strServerName, bVisible, null);
        }
        
        /// <remarks/>
        public void UpdateServerVisibilityAsync(string strSessionID, string strServerName, bool bVisible, object userState) {
            if ((this.UpdateServerVisibilityOperationCompleted == null)) {
                this.UpdateServerVisibilityOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateServerVisibilityOperationCompleted);
            }
            this.InvokeAsync("UpdateServerVisibility", new object[] {
                        strSessionID,
                        strServerName,
                        bVisible}, this.UpdateServerVisibilityOperationCompleted, userState);
        }
        
        private void OnUpdateServerVisibilityOperationCompleted(object arg) {
            if ((this.UpdateServerVisibilityCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateServerVisibilityCompleted(this, new UpdateServerVisibilityCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/UpdateUserCredentials", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateUserCredentials(string strSessionID, string strServerName, string strLoginName, string strPassword, string strDomain, out string strErr) {
            object[] results = this.Invoke("UpdateUserCredentials", new object[] {
                        strSessionID,
                        strServerName,
                        strLoginName,
                        strPassword,
                        strDomain});
            strErr = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateUserCredentialsAsync(string strSessionID, string strServerName, string strLoginName, string strPassword, string strDomain) {
            this.UpdateUserCredentialsAsync(strSessionID, strServerName, strLoginName, strPassword, strDomain, null);
        }
        
        /// <remarks/>
        public void UpdateUserCredentialsAsync(string strSessionID, string strServerName, string strLoginName, string strPassword, string strDomain, object userState) {
            if ((this.UpdateUserCredentialsOperationCompleted == null)) {
                this.UpdateUserCredentialsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUserCredentialsOperationCompleted);
            }
            this.InvokeAsync("UpdateUserCredentials", new object[] {
                        strSessionID,
                        strServerName,
                        strLoginName,
                        strPassword,
                        strDomain}, this.UpdateUserCredentialsOperationCompleted, userState);
        }
        
        private void OnUpdateUserCredentialsOperationCompleted(object arg) {
            if ((this.UpdateUserCredentialsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateUserCredentialsCompleted(this, new UpdateUserCredentialsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/ValidateUser", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ValidateUser(string strDomain, string strUser, string strPassword, out string strErr) {
            object[] results = this.Invoke("ValidateUser", new object[] {
                        strDomain,
                        strUser,
                        strPassword});
            strErr = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ValidateUserAsync(string strDomain, string strUser, string strPassword) {
            this.ValidateUserAsync(strDomain, strUser, strPassword, null);
        }
        
        /// <remarks/>
        public void ValidateUserAsync(string strDomain, string strUser, string strPassword, object userState) {
            if ((this.ValidateUserOperationCompleted == null)) {
                this.ValidateUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnValidateUserOperationCompleted);
            }
            this.InvokeAsync("ValidateUser", new object[] {
                        strDomain,
                        strUser,
                        strPassword}, this.ValidateUserOperationCompleted, userState);
        }
        
        private void OnValidateUserOperationCompleted(object arg) {
            if ((this.ValidateUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ValidateUserCompleted(this, new ValidateUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/GetAllJobFunctionsOfUser", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetAllJobFunctionsOfUser(string strOrgName, string strUserName, out string[] strArrJobFunctions, out string strErr) {
            object[] results = this.Invoke("GetAllJobFunctionsOfUser", new object[] {
                        strOrgName,
                        strUserName});
            strArrJobFunctions = ((string[])(results[1]));
            strErr = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetAllJobFunctionsOfUserAsync(string strOrgName, string strUserName) {
            this.GetAllJobFunctionsOfUserAsync(strOrgName, strUserName, null);
        }
        
        /// <remarks/>
        public void GetAllJobFunctionsOfUserAsync(string strOrgName, string strUserName, object userState) {
            if ((this.GetAllJobFunctionsOfUserOperationCompleted == null)) {
                this.GetAllJobFunctionsOfUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllJobFunctionsOfUserOperationCompleted);
            }
            this.InvokeAsync("GetAllJobFunctionsOfUser", new object[] {
                        strOrgName,
                        strUserName}, this.GetAllJobFunctionsOfUserOperationCompleted, userState);
        }
        
        private void OnGetAllJobFunctionsOfUserOperationCompleted(object arg) {
            if ((this.GetAllJobFunctionsOfUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllJobFunctionsOfUserCompleted(this, new GetAllJobFunctionsOfUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/LoginUser", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool LoginUser(string strDomain, string strUser, string strPassword, out string strSessionID, out string strErr) {
            object[] results = this.Invoke("LoginUser", new object[] {
                        strDomain,
                        strUser,
                        strPassword});
            strSessionID = ((string)(results[1]));
            strErr = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void LoginUserAsync(string strDomain, string strUser, string strPassword) {
            this.LoginUserAsync(strDomain, strUser, strPassword, null);
        }
        
        /// <remarks/>
        public void LoginUserAsync(string strDomain, string strUser, string strPassword, object userState) {
            if ((this.LoginUserOperationCompleted == null)) {
                this.LoginUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginUserOperationCompleted);
            }
            this.InvokeAsync("LoginUser", new object[] {
                        strDomain,
                        strUser,
                        strPassword}, this.LoginUserOperationCompleted, userState);
        }
        
        private void OnLoginUserOperationCompleted(object arg) {
            if ((this.LoginUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LoginUserCompleted(this, new LoginUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/LogoutUser", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool LogoutUser(string strSessionID, out string strErr) {
            object[] results = this.Invoke("LogoutUser", new object[] {
                        strSessionID});
            strErr = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void LogoutUserAsync(string strSessionID) {
            this.LogoutUserAsync(strSessionID, null);
        }
        
        /// <remarks/>
        public void LogoutUserAsync(string strSessionID, object userState) {
            if ((this.LogoutUserOperationCompleted == null)) {
                this.LogoutUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLogoutUserOperationCompleted);
            }
            this.InvokeAsync("LogoutUser", new object[] {
                        strSessionID}, this.LogoutUserOperationCompleted, userState);
        }
        
        private void OnLogoutUserOperationCompleted(object arg) {
            if ((this.LogoutUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.LogoutUserCompleted(this, new LogoutUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/IsValidSessionID", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsValidSessionID(string strSessionID, string strUser) {
            object[] results = this.Invoke("IsValidSessionID", new object[] {
                        strSessionID,
                        strUser});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsValidSessionIDAsync(string strSessionID, string strUser) {
            this.IsValidSessionIDAsync(strSessionID, strUser, null);
        }
        
        /// <remarks/>
        public void IsValidSessionIDAsync(string strSessionID, string strUser, object userState) {
            if ((this.IsValidSessionIDOperationCompleted == null)) {
                this.IsValidSessionIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsValidSessionIDOperationCompleted);
            }
            this.InvokeAsync("IsValidSessionID", new object[] {
                        strSessionID,
                        strUser}, this.IsValidSessionIDOperationCompleted, userState);
        }
        
        private void OnIsValidSessionIDOperationCompleted(object arg) {
            if ((this.IsValidSessionIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsValidSessionIDCompleted(this, new IsValidSessionIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/GetFullNameFromShortName", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetFullNameFromShortName(string strUserName, out string strUserFullName) {
            object[] results = this.Invoke("GetFullNameFromShortName", new object[] {
                        strUserName});
            strUserFullName = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetFullNameFromShortNameAsync(string strUserName) {
            this.GetFullNameFromShortNameAsync(strUserName, null);
        }
        
        /// <remarks/>
        public void GetFullNameFromShortNameAsync(string strUserName, object userState) {
            if ((this.GetFullNameFromShortNameOperationCompleted == null)) {
                this.GetFullNameFromShortNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFullNameFromShortNameOperationCompleted);
            }
            this.InvokeAsync("GetFullNameFromShortName", new object[] {
                        strUserName}, this.GetFullNameFromShortNameOperationCompleted, userState);
        }
        
        private void OnGetFullNameFromShortNameOperationCompleted(object arg) {
            if ((this.GetFullNameFromShortNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFullNameFromShortNameCompleted(this, new GetFullNameFromShortNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/GetExactCaseUser", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetExactCaseUser(string strOrgName, string strUserName, out string strUserWithCase, out string strErr) {
            object[] results = this.Invoke("GetExactCaseUser", new object[] {
                        strOrgName,
                        strUserName});
            strUserWithCase = ((string)(results[1]));
            strErr = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetExactCaseUserAsync(string strOrgName, string strUserName) {
            this.GetExactCaseUserAsync(strOrgName, strUserName, null);
        }
        
        /// <remarks/>
        public void GetExactCaseUserAsync(string strOrgName, string strUserName, object userState) {
            if ((this.GetExactCaseUserOperationCompleted == null)) {
                this.GetExactCaseUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetExactCaseUserOperationCompleted);
            }
            this.InvokeAsync("GetExactCaseUser", new object[] {
                        strOrgName,
                        strUserName}, this.GetExactCaseUserOperationCompleted, userState);
        }
        
        private void OnGetExactCaseUserOperationCompleted(object arg) {
            if ((this.GetExactCaseUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetExactCaseUserCompleted(this, new GetExactCaseUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/IsDepartmentMember", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsDepartmentMember(string strOrgName, string strUserName, string strDepartmentName, string strDepartmentID, out bool bResult, out string strErr) {
            object[] results = this.Invoke("IsDepartmentMember", new object[] {
                        strOrgName,
                        strUserName,
                        strDepartmentName,
                        strDepartmentID});
            bResult = ((bool)(results[1]));
            strErr = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsDepartmentMemberAsync(string strOrgName, string strUserName, string strDepartmentName, string strDepartmentID) {
            this.IsDepartmentMemberAsync(strOrgName, strUserName, strDepartmentName, strDepartmentID, null);
        }
        
        /// <remarks/>
        public void IsDepartmentMemberAsync(string strOrgName, string strUserName, string strDepartmentName, string strDepartmentID, object userState) {
            if ((this.IsDepartmentMemberOperationCompleted == null)) {
                this.IsDepartmentMemberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsDepartmentMemberOperationCompleted);
            }
            this.InvokeAsync("IsDepartmentMember", new object[] {
                        strOrgName,
                        strUserName,
                        strDepartmentName,
                        strDepartmentID}, this.IsDepartmentMemberOperationCompleted, userState);
        }
        
        private void OnIsDepartmentMemberOperationCompleted(object arg) {
            if ((this.IsDepartmentMemberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsDepartmentMemberCompleted(this, new IsDepartmentMemberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/GetDepartmentsList", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetDepartmentsList(string strOrgName, string strDeptID, out string[] strArrDepartmentNames, out string[] DepartmentIDs, out string strErr) {
            object[] results = this.Invoke("GetDepartmentsList", new object[] {
                        strOrgName,
                        strDeptID});
            strArrDepartmentNames = ((string[])(results[1]));
            DepartmentIDs = ((string[])(results[2]));
            strErr = ((string)(results[3]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetDepartmentsListAsync(string strOrgName, string strDeptID) {
            this.GetDepartmentsListAsync(strOrgName, strDeptID, null);
        }
        
        /// <remarks/>
        public void GetDepartmentsListAsync(string strOrgName, string strDeptID, object userState) {
            if ((this.GetDepartmentsListOperationCompleted == null)) {
                this.GetDepartmentsListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDepartmentsListOperationCompleted);
            }
            this.InvokeAsync("GetDepartmentsList", new object[] {
                        strOrgName,
                        strDeptID}, this.GetDepartmentsListOperationCompleted, userState);
        }
        
        private void OnGetDepartmentsListOperationCompleted(object arg) {
            if ((this.GetDepartmentsListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDepartmentsListCompleted(this, new GetDepartmentsListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/GetUserEmailAddress", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetUserEmailAddress(string strUserName, out string strUserEmail, out string strErr) {
            object[] results = this.Invoke("GetUserEmailAddress", new object[] {
                        strUserName});
            strUserEmail = ((string)(results[1]));
            strErr = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserEmailAddressAsync(string strUserName) {
            this.GetUserEmailAddressAsync(strUserName, null);
        }
        
        /// <remarks/>
        public void GetUserEmailAddressAsync(string strUserName, object userState) {
            if ((this.GetUserEmailAddressOperationCompleted == null)) {
                this.GetUserEmailAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserEmailAddressOperationCompleted);
            }
            this.InvokeAsync("GetUserEmailAddress", new object[] {
                        strUserName}, this.GetUserEmailAddressOperationCompleted, userState);
        }
        
        private void OnGetUserEmailAddressOperationCompleted(object arg) {
            if ((this.GetUserEmailAddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserEmailAddressCompleted(this, new GetUserEmailAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/SetUserEmailAddress", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SetUserEmailAddress(string strSessionID, string strUserEmail, out string strErr) {
            object[] results = this.Invoke("SetUserEmailAddress", new object[] {
                        strSessionID,
                        strUserEmail});
            strErr = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SetUserEmailAddressAsync(string strSessionID, string strUserEmail) {
            this.SetUserEmailAddressAsync(strSessionID, strUserEmail, null);
        }
        
        /// <remarks/>
        public void SetUserEmailAddressAsync(string strSessionID, string strUserEmail, object userState) {
            if ((this.SetUserEmailAddressOperationCompleted == null)) {
                this.SetUserEmailAddressOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetUserEmailAddressOperationCompleted);
            }
            this.InvokeAsync("SetUserEmailAddress", new object[] {
                        strSessionID,
                        strUserEmail}, this.SetUserEmailAddressOperationCompleted, userState);
        }
        
        private void OnSetUserEmailAddressOperationCompleted(object arg) {
            if ((this.SetUserEmailAddressCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetUserEmailAddressCompleted(this, new SetUserEmailAddressCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/GetUserProperties", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetUserProperties(string strOrgName, string strUserName, out UserProperties objUserProperties, out string strErr) {
            object[] results = this.Invoke("GetUserProperties", new object[] {
                        strOrgName,
                        strUserName});
            objUserProperties = ((UserProperties)(results[1]));
            strErr = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserPropertiesAsync(string strOrgName, string strUserName) {
            this.GetUserPropertiesAsync(strOrgName, strUserName, null);
        }
        
        /// <remarks/>
        public void GetUserPropertiesAsync(string strOrgName, string strUserName, object userState) {
            if ((this.GetUserPropertiesOperationCompleted == null)) {
                this.GetUserPropertiesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserPropertiesOperationCompleted);
            }
            this.InvokeAsync("GetUserProperties", new object[] {
                        strOrgName,
                        strUserName}, this.GetUserPropertiesOperationCompleted, userState);
        }
        
        private void OnGetUserPropertiesOperationCompleted(object arg) {
            if ((this.GetUserPropertiesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserPropertiesCompleted(this, new GetUserPropertiesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/GetUserGroups", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetUserGroups(string strUserName, out GroupInfo[] arrGroups, out string strErr) {
            object[] results = this.Invoke("GetUserGroups", new object[] {
                        strUserName});
            arrGroups = ((GroupInfo[])(results[1]));
            strErr = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserGroupsAsync(string strUserName) {
            this.GetUserGroupsAsync(strUserName, null);
        }
        
        /// <remarks/>
        public void GetUserGroupsAsync(string strUserName, object userState) {
            if ((this.GetUserGroupsOperationCompleted == null)) {
                this.GetUserGroupsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserGroupsOperationCompleted);
            }
            this.InvokeAsync("GetUserGroups", new object[] {
                        strUserName}, this.GetUserGroupsOperationCompleted, userState);
        }
        
        private void OnGetUserGroupsOperationCompleted(object arg) {
            if ((this.GetUserGroupsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserGroupsCompleted(this, new GetUserGroupsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/GetPersonOrganizations", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetPersonOrganizations(string strUserName, out string[] strArrOrgNames, out string strErr) {
            object[] results = this.Invoke("GetPersonOrganizations", new object[] {
                        strUserName});
            strArrOrgNames = ((string[])(results[1]));
            strErr = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetPersonOrganizationsAsync(string strUserName) {
            this.GetPersonOrganizationsAsync(strUserName, null);
        }
        
        /// <remarks/>
        public void GetPersonOrganizationsAsync(string strUserName, object userState) {
            if ((this.GetPersonOrganizationsOperationCompleted == null)) {
                this.GetPersonOrganizationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPersonOrganizationsOperationCompleted);
            }
            this.InvokeAsync("GetPersonOrganizations", new object[] {
                        strUserName}, this.GetPersonOrganizationsOperationCompleted, userState);
        }
        
        private void OnGetPersonOrganizationsOperationCompleted(object arg) {
            if ((this.GetPersonOrganizationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPersonOrganizationsCompleted(this, new GetPersonOrganizationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/GetFullNamesFromShortNames", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetFullNamesFromShortNames(string[] strArrDomain, string[] strArrUserNames, out string[] strArrUserFullNames, out string strErr) {
            object[] results = this.Invoke("GetFullNamesFromShortNames", new object[] {
                        strArrDomain,
                        strArrUserNames});
            strArrUserFullNames = ((string[])(results[1]));
            strErr = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetFullNamesFromShortNamesAsync(string[] strArrDomain, string[] strArrUserNames) {
            this.GetFullNamesFromShortNamesAsync(strArrDomain, strArrUserNames, null);
        }
        
        /// <remarks/>
        public void GetFullNamesFromShortNamesAsync(string[] strArrDomain, string[] strArrUserNames, object userState) {
            if ((this.GetFullNamesFromShortNamesOperationCompleted == null)) {
                this.GetFullNamesFromShortNamesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetFullNamesFromShortNamesOperationCompleted);
            }
            this.InvokeAsync("GetFullNamesFromShortNames", new object[] {
                        strArrDomain,
                        strArrUserNames}, this.GetFullNamesFromShortNamesOperationCompleted, userState);
        }
        
        private void OnGetFullNamesFromShortNamesOperationCompleted(object arg) {
            if ((this.GetFullNamesFromShortNamesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetFullNamesFromShortNamesCompleted(this, new GetFullNamesFromShortNamesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/GetUserSubordinates", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetUserSubordinates(string strOrgName, string strUserName, string strDept, out UserSubordinate[] listSubOrdinates, out string strErr) {
            object[] results = this.Invoke("GetUserSubordinates", new object[] {
                        strOrgName,
                        strUserName,
                        strDept});
            listSubOrdinates = ((UserSubordinate[])(results[1]));
            strErr = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserSubordinatesAsync(string strOrgName, string strUserName, string strDept) {
            this.GetUserSubordinatesAsync(strOrgName, strUserName, strDept, null);
        }
        
        /// <remarks/>
        public void GetUserSubordinatesAsync(string strOrgName, string strUserName, string strDept, object userState) {
            if ((this.GetUserSubordinatesOperationCompleted == null)) {
                this.GetUserSubordinatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserSubordinatesOperationCompleted);
            }
            this.InvokeAsync("GetUserSubordinates", new object[] {
                        strOrgName,
                        strUserName,
                        strDept}, this.GetUserSubordinatesOperationCompleted, userState);
        }
        
        private void OnGetUserSubordinatesOperationCompleted(object arg) {
            if ((this.GetUserSubordinatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserSubordinatesCompleted(this, new GetUserSubordinatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/GetUserSubordinatesEx", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetUserSubordinatesEx(string strOrgName, string strUserName, out UserSubordinate[] listSubOrdinates, out string strErr) {
            object[] results = this.Invoke("GetUserSubordinatesEx", new object[] {
                        strOrgName,
                        strUserName});
            listSubOrdinates = ((UserSubordinate[])(results[1]));
            strErr = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserSubordinatesExAsync(string strOrgName, string strUserName) {
            this.GetUserSubordinatesExAsync(strOrgName, strUserName, null);
        }
        
        /// <remarks/>
        public void GetUserSubordinatesExAsync(string strOrgName, string strUserName, object userState) {
            if ((this.GetUserSubordinatesExOperationCompleted == null)) {
                this.GetUserSubordinatesExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserSubordinatesExOperationCompleted);
            }
            this.InvokeAsync("GetUserSubordinatesEx", new object[] {
                        strOrgName,
                        strUserName}, this.GetUserSubordinatesExOperationCompleted, userState);
        }
        
        private void OnGetUserSubordinatesExOperationCompleted(object arg) {
            if ((this.GetUserSubordinatesExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserSubordinatesExCompleted(this, new GetUserSubordinatesExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/GetUserSubordinatesForJobFunction", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetUserSubordinatesForJobFunction(string strOrgName, string strJobFunction, string strDept, out UserSubordinate[] listSubOrdinates, out string strErr) {
            object[] results = this.Invoke("GetUserSubordinatesForJobFunction", new object[] {
                        strOrgName,
                        strJobFunction,
                        strDept});
            listSubOrdinates = ((UserSubordinate[])(results[1]));
            strErr = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserSubordinatesForJobFunctionAsync(string strOrgName, string strJobFunction, string strDept) {
            this.GetUserSubordinatesForJobFunctionAsync(strOrgName, strJobFunction, strDept, null);
        }
        
        /// <remarks/>
        public void GetUserSubordinatesForJobFunctionAsync(string strOrgName, string strJobFunction, string strDept, object userState) {
            if ((this.GetUserSubordinatesForJobFunctionOperationCompleted == null)) {
                this.GetUserSubordinatesForJobFunctionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserSubordinatesForJobFunctionOperationCompleted);
            }
            this.InvokeAsync("GetUserSubordinatesForJobFunction", new object[] {
                        strOrgName,
                        strJobFunction,
                        strDept}, this.GetUserSubordinatesForJobFunctionOperationCompleted, userState);
        }
        
        private void OnGetUserSubordinatesForJobFunctionOperationCompleted(object arg) {
            if ((this.GetUserSubordinatesForJobFunctionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserSubordinatesForJobFunctionCompleted(this, new GetUserSubordinatesForJobFunctionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/IsUserHierarchicallyAbove", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool IsUserHierarchicallyAbove(string strOrgName, string strUserName, string strUserHierarchicallyAbove, bool bCheckPrimary, out bool bResult, out string strErr) {
            object[] results = this.Invoke("IsUserHierarchicallyAbove", new object[] {
                        strOrgName,
                        strUserName,
                        strUserHierarchicallyAbove,
                        bCheckPrimary});
            bResult = ((bool)(results[1]));
            strErr = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void IsUserHierarchicallyAboveAsync(string strOrgName, string strUserName, string strUserHierarchicallyAbove, bool bCheckPrimary) {
            this.IsUserHierarchicallyAboveAsync(strOrgName, strUserName, strUserHierarchicallyAbove, bCheckPrimary, null);
        }
        
        /// <remarks/>
        public void IsUserHierarchicallyAboveAsync(string strOrgName, string strUserName, string strUserHierarchicallyAbove, bool bCheckPrimary, object userState) {
            if ((this.IsUserHierarchicallyAboveOperationCompleted == null)) {
                this.IsUserHierarchicallyAboveOperationCompleted = new System.Threading.SendOrPostCallback(this.OnIsUserHierarchicallyAboveOperationCompleted);
            }
            this.InvokeAsync("IsUserHierarchicallyAbove", new object[] {
                        strOrgName,
                        strUserName,
                        strUserHierarchicallyAbove,
                        bCheckPrimary}, this.IsUserHierarchicallyAboveOperationCompleted, userState);
        }
        
        private void OnIsUserHierarchicallyAboveOperationCompleted(object arg) {
            if ((this.IsUserHierarchicallyAboveCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.IsUserHierarchicallyAboveCompleted(this, new IsUserHierarchicallyAboveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/GetUserIDForJobFunction", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetUserIDForJobFunction(string strOrgName, string strJF, out string strUserID, out string strErr) {
            object[] results = this.Invoke("GetUserIDForJobFunction", new object[] {
                        strOrgName,
                        strJF});
            strUserID = ((string)(results[1]));
            strErr = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserIDForJobFunctionAsync(string strOrgName, string strJF) {
            this.GetUserIDForJobFunctionAsync(strOrgName, strJF, null);
        }
        
        /// <remarks/>
        public void GetUserIDForJobFunctionAsync(string strOrgName, string strJF, object userState) {
            if ((this.GetUserIDForJobFunctionOperationCompleted == null)) {
                this.GetUserIDForJobFunctionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserIDForJobFunctionOperationCompleted);
            }
            this.InvokeAsync("GetUserIDForJobFunction", new object[] {
                        strOrgName,
                        strJF}, this.GetUserIDForJobFunctionOperationCompleted, userState);
        }
        
        private void OnGetUserIDForJobFunctionOperationCompleted(object arg) {
            if ((this.GetUserIDForJobFunctionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserIDForJobFunctionCompleted(this, new GetUserIDForJobFunctionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/CheckUserRight", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckUserRight(UserRights right, string strUserName, out bool bHasRight, out string strErr) {
            object[] results = this.Invoke("CheckUserRight", new object[] {
                        right,
                        strUserName});
            bHasRight = ((bool)(results[1]));
            strErr = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckUserRightAsync(UserRights right, string strUserName) {
            this.CheckUserRightAsync(right, strUserName, null);
        }
        
        /// <remarks/>
        public void CheckUserRightAsync(UserRights right, string strUserName, object userState) {
            if ((this.CheckUserRightOperationCompleted == null)) {
                this.CheckUserRightOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckUserRightOperationCompleted);
            }
            this.InvokeAsync("CheckUserRight", new object[] {
                        right,
                        strUserName}, this.CheckUserRightOperationCompleted, userState);
        }
        
        private void OnCheckUserRightOperationCompleted(object arg) {
            if ((this.CheckUserRightCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckUserRightCompleted(this, new CheckUserRightCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/AreAccessRigthsEnabled", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AreAccessRigthsEnabled(out bool bEnabled, out string strErr) {
            object[] results = this.Invoke("AreAccessRigthsEnabled", new object[0]);
            bEnabled = ((bool)(results[1]));
            strErr = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AreAccessRigthsEnabledAsync() {
            this.AreAccessRigthsEnabledAsync(null);
        }
        
        /// <remarks/>
        public void AreAccessRigthsEnabledAsync(object userState) {
            if ((this.AreAccessRigthsEnabledOperationCompleted == null)) {
                this.AreAccessRigthsEnabledOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAreAccessRigthsEnabledOperationCompleted);
            }
            this.InvokeAsync("AreAccessRigthsEnabled", new object[0], this.AreAccessRigthsEnabledOperationCompleted, userState);
        }
        
        private void OnAreAccessRigthsEnabledOperationCompleted(object arg) {
            if ((this.AreAccessRigthsEnabledCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AreAccessRigthsEnabledCompleted(this, new AreAccessRigthsEnabledCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/GetUserViewsList", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetUserViewsList(string strUserName, out View[] listViewNames, out string strErr) {
            object[] results = this.Invoke("GetUserViewsList", new object[] {
                        strUserName});
            listViewNames = ((View[])(results[1]));
            strErr = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserViewsListAsync(string strUserName) {
            this.GetUserViewsListAsync(strUserName, null);
        }
        
        /// <remarks/>
        public void GetUserViewsListAsync(string strUserName, object userState) {
            if ((this.GetUserViewsListOperationCompleted == null)) {
                this.GetUserViewsListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserViewsListOperationCompleted);
            }
            this.InvokeAsync("GetUserViewsList", new object[] {
                        strUserName}, this.GetUserViewsListOperationCompleted, userState);
        }
        
        private void OnGetUserViewsListOperationCompleted(object arg) {
            if ((this.GetUserViewsListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserViewsListCompleted(this, new GetUserViewsListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/GetGroupViewsList", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetGroupViewsList(string strOrgName, string strGroupName, out View[] listViewNames, out string strErr) {
            object[] results = this.Invoke("GetGroupViewsList", new object[] {
                        strOrgName,
                        strGroupName});
            listViewNames = ((View[])(results[1]));
            strErr = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetGroupViewsListAsync(string strOrgName, string strGroupName) {
            this.GetGroupViewsListAsync(strOrgName, strGroupName, null);
        }
        
        /// <remarks/>
        public void GetGroupViewsListAsync(string strOrgName, string strGroupName, object userState) {
            if ((this.GetGroupViewsListOperationCompleted == null)) {
                this.GetGroupViewsListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGroupViewsListOperationCompleted);
            }
            this.InvokeAsync("GetGroupViewsList", new object[] {
                        strOrgName,
                        strGroupName}, this.GetGroupViewsListOperationCompleted, userState);
        }
        
        private void OnGetGroupViewsListOperationCompleted(object arg) {
            if ((this.GetGroupViewsListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGroupViewsListCompleted(this, new GetGroupViewsListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/AddUserView", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddUserView(string strSessionID, string strViewName, string strViewID, string strFolderID, object objViewInfo, out string strErr) {
            object[] results = this.Invoke("AddUserView", new object[] {
                        strSessionID,
                        strViewName,
                        strViewID,
                        strFolderID,
                        objViewInfo});
            strErr = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddUserViewAsync(string strSessionID, string strViewName, string strViewID, string strFolderID, object objViewInfo) {
            this.AddUserViewAsync(strSessionID, strViewName, strViewID, strFolderID, objViewInfo, null);
        }
        
        /// <remarks/>
        public void AddUserViewAsync(string strSessionID, string strViewName, string strViewID, string strFolderID, object objViewInfo, object userState) {
            if ((this.AddUserViewOperationCompleted == null)) {
                this.AddUserViewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddUserViewOperationCompleted);
            }
            this.InvokeAsync("AddUserView", new object[] {
                        strSessionID,
                        strViewName,
                        strViewID,
                        strFolderID,
                        objViewInfo}, this.AddUserViewOperationCompleted, userState);
        }
        
        private void OnAddUserViewOperationCompleted(object arg) {
            if ((this.AddUserViewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddUserViewCompleted(this, new AddUserViewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/AddGroupView", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddGroupView(string strSessionID, string strOrgName, string strGroupName, string strViewName, string strViewID, object objViewInfo, out string strErr) {
            object[] results = this.Invoke("AddGroupView", new object[] {
                        strSessionID,
                        strOrgName,
                        strGroupName,
                        strViewName,
                        strViewID,
                        objViewInfo});
            strErr = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddGroupViewAsync(string strSessionID, string strOrgName, string strGroupName, string strViewName, string strViewID, object objViewInfo) {
            this.AddGroupViewAsync(strSessionID, strOrgName, strGroupName, strViewName, strViewID, objViewInfo, null);
        }
        
        /// <remarks/>
        public void AddGroupViewAsync(string strSessionID, string strOrgName, string strGroupName, string strViewName, string strViewID, object objViewInfo, object userState) {
            if ((this.AddGroupViewOperationCompleted == null)) {
                this.AddGroupViewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddGroupViewOperationCompleted);
            }
            this.InvokeAsync("AddGroupView", new object[] {
                        strSessionID,
                        strOrgName,
                        strGroupName,
                        strViewName,
                        strViewID,
                        objViewInfo}, this.AddGroupViewOperationCompleted, userState);
        }
        
        private void OnAddGroupViewOperationCompleted(object arg) {
            if ((this.AddGroupViewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddGroupViewCompleted(this, new AddGroupViewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/DeleteUserView", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteUserView(string strSessionID, string strViewID, out string strErr) {
            object[] results = this.Invoke("DeleteUserView", new object[] {
                        strSessionID,
                        strViewID});
            strErr = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteUserViewAsync(string strSessionID, string strViewID) {
            this.DeleteUserViewAsync(strSessionID, strViewID, null);
        }
        
        /// <remarks/>
        public void DeleteUserViewAsync(string strSessionID, string strViewID, object userState) {
            if ((this.DeleteUserViewOperationCompleted == null)) {
                this.DeleteUserViewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteUserViewOperationCompleted);
            }
            this.InvokeAsync("DeleteUserView", new object[] {
                        strSessionID,
                        strViewID}, this.DeleteUserViewOperationCompleted, userState);
        }
        
        private void OnDeleteUserViewOperationCompleted(object arg) {
            if ((this.DeleteUserViewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteUserViewCompleted(this, new DeleteUserViewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/DeleteGroupView", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteGroupView(string strSessionID, string strOrgName, string strGroupName, string strViewID, out string strErr) {
            object[] results = this.Invoke("DeleteGroupView", new object[] {
                        strSessionID,
                        strOrgName,
                        strGroupName,
                        strViewID});
            strErr = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteGroupViewAsync(string strSessionID, string strOrgName, string strGroupName, string strViewID) {
            this.DeleteGroupViewAsync(strSessionID, strOrgName, strGroupName, strViewID, null);
        }
        
        /// <remarks/>
        public void DeleteGroupViewAsync(string strSessionID, string strOrgName, string strGroupName, string strViewID, object userState) {
            if ((this.DeleteGroupViewOperationCompleted == null)) {
                this.DeleteGroupViewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteGroupViewOperationCompleted);
            }
            this.InvokeAsync("DeleteGroupView", new object[] {
                        strSessionID,
                        strOrgName,
                        strGroupName,
                        strViewID}, this.DeleteGroupViewOperationCompleted, userState);
        }
        
        private void OnDeleteGroupViewOperationCompleted(object arg) {
            if ((this.DeleteGroupViewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteGroupViewCompleted(this, new DeleteGroupViewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/GetUserViewsForClient", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetUserViewsForClient(string strSessionID, string strNotUsed, out object[] listUserViews, out string strErr) {
            object[] results = this.Invoke("GetUserViewsForClient", new object[] {
                        strSessionID,
                        strNotUsed});
            listUserViews = ((object[])(results[1]));
            strErr = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserViewsForClientAsync(string strSessionID, string strNotUsed) {
            this.GetUserViewsForClientAsync(strSessionID, strNotUsed, null);
        }
        
        /// <remarks/>
        public void GetUserViewsForClientAsync(string strSessionID, string strNotUsed, object userState) {
            if ((this.GetUserViewsForClientOperationCompleted == null)) {
                this.GetUserViewsForClientOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserViewsForClientOperationCompleted);
            }
            this.InvokeAsync("GetUserViewsForClient", new object[] {
                        strSessionID,
                        strNotUsed}, this.GetUserViewsForClientOperationCompleted, userState);
        }
        
        private void OnGetUserViewsForClientOperationCompleted(object arg) {
            if ((this.GetUserViewsForClientCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserViewsForClientCompleted(this, new GetUserViewsForClientCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/RestoreGenericUserViews", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool RestoreGenericUserViews(string strSessionID, out string strErr) {
            object[] results = this.Invoke("RestoreGenericUserViews", new object[] {
                        strSessionID});
            strErr = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void RestoreGenericUserViewsAsync(string strSessionID) {
            this.RestoreGenericUserViewsAsync(strSessionID, null);
        }
        
        /// <remarks/>
        public void RestoreGenericUserViewsAsync(string strSessionID, object userState) {
            if ((this.RestoreGenericUserViewsOperationCompleted == null)) {
                this.RestoreGenericUserViewsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRestoreGenericUserViewsOperationCompleted);
            }
            this.InvokeAsync("RestoreGenericUserViews", new object[] {
                        strSessionID}, this.RestoreGenericUserViewsOperationCompleted, userState);
        }
        
        private void OnRestoreGenericUserViewsOperationCompleted(object arg) {
            if ((this.RestoreGenericUserViewsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RestoreGenericUserViewsCompleted(this, new RestoreGenericUserViewsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/GetGroupViews", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetGroupViews(string strOrgName, string strGroupName, out object[] listGroupViews, out string strErr) {
            object[] results = this.Invoke("GetGroupViews", new object[] {
                        strOrgName,
                        strGroupName});
            listGroupViews = ((object[])(results[1]));
            strErr = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetGroupViewsAsync(string strOrgName, string strGroupName) {
            this.GetGroupViewsAsync(strOrgName, strGroupName, null);
        }
        
        /// <remarks/>
        public void GetGroupViewsAsync(string strOrgName, string strGroupName, object userState) {
            if ((this.GetGroupViewsOperationCompleted == null)) {
                this.GetGroupViewsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGroupViewsOperationCompleted);
            }
            this.InvokeAsync("GetGroupViews", new object[] {
                        strOrgName,
                        strGroupName}, this.GetGroupViewsOperationCompleted, userState);
        }
        
        private void OnGetGroupViewsOperationCompleted(object arg) {
            if ((this.GetGroupViewsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGroupViewsCompleted(this, new GetGroupViewsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/GetGroupView", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetGroupView(string strOrgName, string strGroupName, string strViewID, out object objGroupView, out string strErr) {
            object[] results = this.Invoke("GetGroupView", new object[] {
                        strOrgName,
                        strGroupName,
                        strViewID});
            objGroupView = ((object)(results[1]));
            strErr = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetGroupViewAsync(string strOrgName, string strGroupName, string strViewID) {
            this.GetGroupViewAsync(strOrgName, strGroupName, strViewID, null);
        }
        
        /// <remarks/>
        public void GetGroupViewAsync(string strOrgName, string strGroupName, string strViewID, object userState) {
            if ((this.GetGroupViewOperationCompleted == null)) {
                this.GetGroupViewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetGroupViewOperationCompleted);
            }
            this.InvokeAsync("GetGroupView", new object[] {
                        strOrgName,
                        strGroupName,
                        strViewID}, this.GetGroupViewOperationCompleted, userState);
        }
        
        private void OnGetGroupViewOperationCompleted(object arg) {
            if ((this.GetGroupViewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetGroupViewCompleted(this, new GetGroupViewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/GetViewByID", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetViewByID(string strViewID, out object objViewInfo, out string strErr) {
            object[] results = this.Invoke("GetViewByID", new object[] {
                        strViewID});
            objViewInfo = ((object)(results[1]));
            strErr = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetViewByIDAsync(string strViewID) {
            this.GetViewByIDAsync(strViewID, null);
        }
        
        /// <remarks/>
        public void GetViewByIDAsync(string strViewID, object userState) {
            if ((this.GetViewByIDOperationCompleted == null)) {
                this.GetViewByIDOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetViewByIDOperationCompleted);
            }
            this.InvokeAsync("GetViewByID", new object[] {
                        strViewID}, this.GetViewByIDOperationCompleted, userState);
        }
        
        private void OnGetViewByIDOperationCompleted(object arg) {
            if ((this.GetViewByIDCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetViewByIDCompleted(this, new GetViewByIDCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/UpdateUserView", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateUserView(string strSessionID, string strViewID, string strViewName, object objViewInfo, out string strErr) {
            object[] results = this.Invoke("UpdateUserView", new object[] {
                        strSessionID,
                        strViewID,
                        strViewName,
                        objViewInfo});
            strErr = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateUserViewAsync(string strSessionID, string strViewID, string strViewName, object objViewInfo) {
            this.UpdateUserViewAsync(strSessionID, strViewID, strViewName, objViewInfo, null);
        }
        
        /// <remarks/>
        public void UpdateUserViewAsync(string strSessionID, string strViewID, string strViewName, object objViewInfo, object userState) {
            if ((this.UpdateUserViewOperationCompleted == null)) {
                this.UpdateUserViewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateUserViewOperationCompleted);
            }
            this.InvokeAsync("UpdateUserView", new object[] {
                        strSessionID,
                        strViewID,
                        strViewName,
                        objViewInfo}, this.UpdateUserViewOperationCompleted, userState);
        }
        
        private void OnUpdateUserViewOperationCompleted(object arg) {
            if ((this.UpdateUserViewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateUserViewCompleted(this, new UpdateUserViewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/UpdateGroupView", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateGroupView(string strSessionID, string strOrgName, string strGroupID, string strViewName, string strViewID, object objViewInfo, out string strErr) {
            object[] results = this.Invoke("UpdateGroupView", new object[] {
                        strSessionID,
                        strOrgName,
                        strGroupID,
                        strViewName,
                        strViewID,
                        objViewInfo});
            strErr = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateGroupViewAsync(string strSessionID, string strOrgName, string strGroupID, string strViewName, string strViewID, object objViewInfo) {
            this.UpdateGroupViewAsync(strSessionID, strOrgName, strGroupID, strViewName, strViewID, objViewInfo, null);
        }
        
        /// <remarks/>
        public void UpdateGroupViewAsync(string strSessionID, string strOrgName, string strGroupID, string strViewName, string strViewID, object objViewInfo, object userState) {
            if ((this.UpdateGroupViewOperationCompleted == null)) {
                this.UpdateGroupViewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateGroupViewOperationCompleted);
            }
            this.InvokeAsync("UpdateGroupView", new object[] {
                        strSessionID,
                        strOrgName,
                        strGroupID,
                        strViewName,
                        strViewID,
                        objViewInfo}, this.UpdateGroupViewOperationCompleted, userState);
        }
        
        private void OnUpdateGroupViewOperationCompleted(object arg) {
            if ((this.UpdateGroupViewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateGroupViewCompleted(this, new UpdateGroupViewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/UpdateViewFolder", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateViewFolder(string strSessionID, string strViewID, string strFolderID, out string strErr) {
            object[] results = this.Invoke("UpdateViewFolder", new object[] {
                        strSessionID,
                        strViewID,
                        strFolderID});
            strErr = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateViewFolderAsync(string strSessionID, string strViewID, string strFolderID) {
            this.UpdateViewFolderAsync(strSessionID, strViewID, strFolderID, null);
        }
        
        /// <remarks/>
        public void UpdateViewFolderAsync(string strSessionID, string strViewID, string strFolderID, object userState) {
            if ((this.UpdateViewFolderOperationCompleted == null)) {
                this.UpdateViewFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateViewFolderOperationCompleted);
            }
            this.InvokeAsync("UpdateViewFolder", new object[] {
                        strSessionID,
                        strViewID,
                        strFolderID}, this.UpdateViewFolderOperationCompleted, userState);
        }
        
        private void OnUpdateViewFolderOperationCompleted(object arg) {
            if ((this.UpdateViewFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateViewFolderCompleted(this, new UpdateViewFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/AddViewFolder", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AddViewFolder(string strSessionID, string strFolderName, string strFolderID, out string strErr) {
            object[] results = this.Invoke("AddViewFolder", new object[] {
                        strSessionID,
                        strFolderName,
                        strFolderID});
            strErr = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AddViewFolderAsync(string strSessionID, string strFolderName, string strFolderID) {
            this.AddViewFolderAsync(strSessionID, strFolderName, strFolderID, null);
        }
        
        /// <remarks/>
        public void AddViewFolderAsync(string strSessionID, string strFolderName, string strFolderID, object userState) {
            if ((this.AddViewFolderOperationCompleted == null)) {
                this.AddViewFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddViewFolderOperationCompleted);
            }
            this.InvokeAsync("AddViewFolder", new object[] {
                        strSessionID,
                        strFolderName,
                        strFolderID}, this.AddViewFolderOperationCompleted, userState);
        }
        
        private void OnAddViewFolderOperationCompleted(object arg) {
            if ((this.AddViewFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddViewFolderCompleted(this, new AddViewFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/DeleteViewFolder", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool DeleteViewFolder(string strSessionID, string strFolderID, out string strErr) {
            object[] results = this.Invoke("DeleteViewFolder", new object[] {
                        strSessionID,
                        strFolderID});
            strErr = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteViewFolderAsync(string strSessionID, string strFolderID) {
            this.DeleteViewFolderAsync(strSessionID, strFolderID, null);
        }
        
        /// <remarks/>
        public void DeleteViewFolderAsync(string strSessionID, string strFolderID, object userState) {
            if ((this.DeleteViewFolderOperationCompleted == null)) {
                this.DeleteViewFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteViewFolderOperationCompleted);
            }
            this.InvokeAsync("DeleteViewFolder", new object[] {
                        strSessionID,
                        strFolderID}, this.DeleteViewFolderOperationCompleted, userState);
        }
        
        private void OnDeleteViewFolderOperationCompleted(object arg) {
            if ((this.DeleteViewFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteViewFolderCompleted(this, new DeleteViewFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/UpdateViewFolderName", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateViewFolderName(string strSessionID, string strFolderID, string strNewName, out string strErr) {
            object[] results = this.Invoke("UpdateViewFolderName", new object[] {
                        strSessionID,
                        strFolderID,
                        strNewName});
            strErr = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateViewFolderNameAsync(string strSessionID, string strFolderID, string strNewName) {
            this.UpdateViewFolderNameAsync(strSessionID, strFolderID, strNewName, null);
        }
        
        /// <remarks/>
        public void UpdateViewFolderNameAsync(string strSessionID, string strFolderID, string strNewName, object userState) {
            if ((this.UpdateViewFolderNameOperationCompleted == null)) {
                this.UpdateViewFolderNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateViewFolderNameOperationCompleted);
            }
            this.InvokeAsync("UpdateViewFolderName", new object[] {
                        strSessionID,
                        strFolderID,
                        strNewName}, this.UpdateViewFolderNameOperationCompleted, userState);
        }
        
        private void OnUpdateViewFolderNameOperationCompleted(object arg) {
            if ((this.UpdateViewFolderNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateViewFolderNameCompleted(this, new UpdateViewFolderNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/GetUserFolderList", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetUserFolderList(string strUserName, out ViewFolder[] FolderList, out string strErr) {
            object[] results = this.Invoke("GetUserFolderList", new object[] {
                        strUserName});
            FolderList = ((ViewFolder[])(results[1]));
            strErr = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserFolderListAsync(string strUserName) {
            this.GetUserFolderListAsync(strUserName, null);
        }
        
        /// <remarks/>
        public void GetUserFolderListAsync(string strUserName, object userState) {
            if ((this.GetUserFolderListOperationCompleted == null)) {
                this.GetUserFolderListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserFolderListOperationCompleted);
            }
            this.InvokeAsync("GetUserFolderList", new object[] {
                        strUserName}, this.GetUserFolderListOperationCompleted, userState);
        }
        
        private void OnGetUserFolderListOperationCompleted(object arg) {
            if ((this.GetUserFolderListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserFolderListCompleted(this, new GetUserFolderListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/UpdateViewSequenceNumberInFolder", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UpdateViewSequenceNumberInFolder(string strSessionID, string strFolderID, string[] strArrViewIDs, out string strErr) {
            object[] results = this.Invoke("UpdateViewSequenceNumberInFolder", new object[] {
                        strSessionID,
                        strFolderID,
                        strArrViewIDs});
            strErr = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UpdateViewSequenceNumberInFolderAsync(string strSessionID, string strFolderID, string[] strArrViewIDs) {
            this.UpdateViewSequenceNumberInFolderAsync(strSessionID, strFolderID, strArrViewIDs, null);
        }
        
        /// <remarks/>
        public void UpdateViewSequenceNumberInFolderAsync(string strSessionID, string strFolderID, string[] strArrViewIDs, object userState) {
            if ((this.UpdateViewSequenceNumberInFolderOperationCompleted == null)) {
                this.UpdateViewSequenceNumberInFolderOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateViewSequenceNumberInFolderOperationCompleted);
            }
            this.InvokeAsync("UpdateViewSequenceNumberInFolder", new object[] {
                        strSessionID,
                        strFolderID,
                        strArrViewIDs}, this.UpdateViewSequenceNumberInFolderOperationCompleted, userState);
        }
        
        private void OnUpdateViewSequenceNumberInFolderOperationCompleted(object arg) {
            if ((this.UpdateViewSequenceNumberInFolderCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateViewSequenceNumberInFolderCompleted(this, new UpdateViewSequenceNumberInFolderCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/ShareViewWithUser", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool ShareViewWithUser(string strSessionID, string strViewName, string strViewID, string strSharedUser, out string strErr) {
            object[] results = this.Invoke("ShareViewWithUser", new object[] {
                        strSessionID,
                        strViewName,
                        strViewID,
                        strSharedUser});
            strErr = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void ShareViewWithUserAsync(string strSessionID, string strViewName, string strViewID, string strSharedUser) {
            this.ShareViewWithUserAsync(strSessionID, strViewName, strViewID, strSharedUser, null);
        }
        
        /// <remarks/>
        public void ShareViewWithUserAsync(string strSessionID, string strViewName, string strViewID, string strSharedUser, object userState) {
            if ((this.ShareViewWithUserOperationCompleted == null)) {
                this.ShareViewWithUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnShareViewWithUserOperationCompleted);
            }
            this.InvokeAsync("ShareViewWithUser", new object[] {
                        strSessionID,
                        strViewName,
                        strViewID,
                        strSharedUser}, this.ShareViewWithUserOperationCompleted, userState);
        }
        
        private void OnShareViewWithUserOperationCompleted(object arg) {
            if ((this.ShareViewWithUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ShareViewWithUserCompleted(this, new ShareViewWithUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/UnshareViewWithUser", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool UnshareViewWithUser(string strSessionID, string strViewID, string strSharedUser, out string strErr) {
            object[] results = this.Invoke("UnshareViewWithUser", new object[] {
                        strSessionID,
                        strViewID,
                        strSharedUser});
            strErr = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void UnshareViewWithUserAsync(string strSessionID, string strViewID, string strSharedUser) {
            this.UnshareViewWithUserAsync(strSessionID, strViewID, strSharedUser, null);
        }
        
        /// <remarks/>
        public void UnshareViewWithUserAsync(string strSessionID, string strViewID, string strSharedUser, object userState) {
            if ((this.UnshareViewWithUserOperationCompleted == null)) {
                this.UnshareViewWithUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUnshareViewWithUserOperationCompleted);
            }
            this.InvokeAsync("UnshareViewWithUser", new object[] {
                        strSessionID,
                        strViewID,
                        strSharedUser}, this.UnshareViewWithUserOperationCompleted, userState);
        }
        
        private void OnUnshareViewWithUserOperationCompleted(object arg) {
            if ((this.UnshareViewWithUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UnshareViewWithUserCompleted(this, new UnshareViewWithUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/GetUserNamesforSharedView", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetUserNamesforSharedView(string strSessionID, string strViewName, string strViewID, out string[] listUsers, out string strErr) {
            object[] results = this.Invoke("GetUserNamesforSharedView", new object[] {
                        strSessionID,
                        strViewName,
                        strViewID});
            listUsers = ((string[])(results[1]));
            strErr = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserNamesforSharedViewAsync(string strSessionID, string strViewName, string strViewID) {
            this.GetUserNamesforSharedViewAsync(strSessionID, strViewName, strViewID, null);
        }
        
        /// <remarks/>
        public void GetUserNamesforSharedViewAsync(string strSessionID, string strViewName, string strViewID, object userState) {
            if ((this.GetUserNamesforSharedViewOperationCompleted == null)) {
                this.GetUserNamesforSharedViewOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserNamesforSharedViewOperationCompleted);
            }
            this.InvokeAsync("GetUserNamesforSharedView", new object[] {
                        strSessionID,
                        strViewName,
                        strViewID}, this.GetUserNamesforSharedViewOperationCompleted, userState);
        }
        
        private void OnGetUserNamesforSharedViewOperationCompleted(object arg) {
            if ((this.GetUserNamesforSharedViewCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserNamesforSharedViewCompleted(this, new GetUserNamesforSharedViewCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/GetViewsSharedToUser", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetViewsSharedToUser(string strSessionID, out object[] listSharedViews, out string strErr) {
            object[] results = this.Invoke("GetViewsSharedToUser", new object[] {
                        strSessionID});
            listSharedViews = ((object[])(results[1]));
            strErr = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetViewsSharedToUserAsync(string strSessionID) {
            this.GetViewsSharedToUserAsync(strSessionID, null);
        }
        
        /// <remarks/>
        public void GetViewsSharedToUserAsync(string strSessionID, object userState) {
            if ((this.GetViewsSharedToUserOperationCompleted == null)) {
                this.GetViewsSharedToUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetViewsSharedToUserOperationCompleted);
            }
            this.InvokeAsync("GetViewsSharedToUser", new object[] {
                        strSessionID}, this.GetViewsSharedToUserOperationCompleted, userState);
        }
        
        private void OnGetViewsSharedToUserOperationCompleted(object arg) {
            if ((this.GetViewsSharedToUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetViewsSharedToUserCompleted(this, new GetViewsSharedToUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/GetUserPreferences", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetUserPreferences(string strUserName, out object objUserPreferences, out string strErr) {
            object[] results = this.Invoke("GetUserPreferences", new object[] {
                        strUserName});
            objUserPreferences = ((object)(results[1]));
            strErr = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserPreferencesAsync(string strUserName) {
            this.GetUserPreferencesAsync(strUserName, null);
        }
        
        /// <remarks/>
        public void GetUserPreferencesAsync(string strUserName, object userState) {
            if ((this.GetUserPreferencesOperationCompleted == null)) {
                this.GetUserPreferencesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserPreferencesOperationCompleted);
            }
            this.InvokeAsync("GetUserPreferences", new object[] {
                        strUserName}, this.GetUserPreferencesOperationCompleted, userState);
        }
        
        private void OnGetUserPreferencesOperationCompleted(object arg) {
            if ((this.GetUserPreferencesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserPreferencesCompleted(this, new GetUserPreferencesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/SetUserPreferences", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SetUserPreferences(string strSessionID, object objUserPreferences, out string strErr) {
            object[] results = this.Invoke("SetUserPreferences", new object[] {
                        strSessionID,
                        objUserPreferences});
            strErr = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SetUserPreferencesAsync(string strSessionID, object objUserPreferences) {
            this.SetUserPreferencesAsync(strSessionID, objUserPreferences, null);
        }
        
        /// <remarks/>
        public void SetUserPreferencesAsync(string strSessionID, object objUserPreferences, object userState) {
            if ((this.SetUserPreferencesOperationCompleted == null)) {
                this.SetUserPreferencesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetUserPreferencesOperationCompleted);
            }
            this.InvokeAsync("SetUserPreferences", new object[] {
                        strSessionID,
                        objUserPreferences}, this.SetUserPreferencesOperationCompleted, userState);
        }
        
        private void OnSetUserPreferencesOperationCompleted(object arg) {
            if ((this.SetUserPreferencesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetUserPreferencesCompleted(this, new SetUserPreferencesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/GetAssociates", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetAssociates(string strUserName, out UserAssociate[] listUserAssociates, out string strErr) {
            object[] results = this.Invoke("GetAssociates", new object[] {
                        strUserName});
            listUserAssociates = ((UserAssociate[])(results[1]));
            strErr = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetAssociatesAsync(string strUserName) {
            this.GetAssociatesAsync(strUserName, null);
        }
        
        /// <remarks/>
        public void GetAssociatesAsync(string strUserName, object userState) {
            if ((this.GetAssociatesOperationCompleted == null)) {
                this.GetAssociatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAssociatesOperationCompleted);
            }
            this.InvokeAsync("GetAssociates", new object[] {
                        strUserName}, this.GetAssociatesOperationCompleted, userState);
        }
        
        private void OnGetAssociatesOperationCompleted(object arg) {
            if ((this.GetAssociatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAssociatesCompleted(this, new GetAssociatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/SetAssociates", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool SetAssociates(string strSessionID, UserAssociate[] listUserAssociates, out string strErr) {
            object[] results = this.Invoke("SetAssociates", new object[] {
                        strSessionID,
                        listUserAssociates});
            strErr = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void SetAssociatesAsync(string strSessionID, UserAssociate[] listUserAssociates) {
            this.SetAssociatesAsync(strSessionID, listUserAssociates, null);
        }
        
        /// <remarks/>
        public void SetAssociatesAsync(string strSessionID, UserAssociate[] listUserAssociates, object userState) {
            if ((this.SetAssociatesOperationCompleted == null)) {
                this.SetAssociatesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetAssociatesOperationCompleted);
            }
            this.InvokeAsync("SetAssociates", new object[] {
                        strSessionID,
                        listUserAssociates}, this.SetAssociatesOperationCompleted, userState);
        }
        
        private void OnSetAssociatesOperationCompleted(object arg) {
            if ((this.SetAssociatesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetAssociatesCompleted(this, new SetAssociatesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/RemoveAssociate", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool RemoveAssociate(string strSessionID, string strAssociate, out string strErr) {
            object[] results = this.Invoke("RemoveAssociate", new object[] {
                        strSessionID,
                        strAssociate});
            strErr = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void RemoveAssociateAsync(string strSessionID, string strAssociate) {
            this.RemoveAssociateAsync(strSessionID, strAssociate, null);
        }
        
        /// <remarks/>
        public void RemoveAssociateAsync(string strSessionID, string strAssociate, object userState) {
            if ((this.RemoveAssociateOperationCompleted == null)) {
                this.RemoveAssociateOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRemoveAssociateOperationCompleted);
            }
            this.InvokeAsync("RemoveAssociate", new object[] {
                        strSessionID,
                        strAssociate}, this.RemoveAssociateOperationCompleted, userState);
        }
        
        private void OnRemoveAssociateOperationCompleted(object arg) {
            if ((this.RemoveAssociateCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RemoveAssociateCompleted(this, new RemoveAssociateCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/GetDomainsOnServer", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetDomainsOnServer(out string[] strArrDomains, out string strErr) {
            object[] results = this.Invoke("GetDomainsOnServer", new object[0]);
            strArrDomains = ((string[])(results[1]));
            strErr = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetDomainsOnServerAsync() {
            this.GetDomainsOnServerAsync(null);
        }
        
        /// <remarks/>
        public void GetDomainsOnServerAsync(object userState) {
            if ((this.GetDomainsOnServerOperationCompleted == null)) {
                this.GetDomainsOnServerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetDomainsOnServerOperationCompleted);
            }
            this.InvokeAsync("GetDomainsOnServer", new object[0], this.GetDomainsOnServerOperationCompleted, userState);
        }
        
        private void OnGetDomainsOnServerOperationCompleted(object arg) {
            if ((this.GetDomainsOnServerCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetDomainsOnServerCompleted(this, new GetDomainsOnServerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/GetServerVersion", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetServerVersion(out int dwVersion, out string strErr) {
            object[] results = this.Invoke("GetServerVersion", new object[0]);
            dwVersion = ((int)(results[1]));
            strErr = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetServerVersionAsync() {
            this.GetServerVersionAsync(null);
        }
        
        /// <remarks/>
        public void GetServerVersionAsync(object userState) {
            if ((this.GetServerVersionOperationCompleted == null)) {
                this.GetServerVersionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetServerVersionOperationCompleted);
            }
            this.InvokeAsync("GetServerVersion", new object[0], this.GetServerVersionOperationCompleted, userState);
        }
        
        private void OnGetServerVersionOperationCompleted(object arg) {
            if ((this.GetServerVersionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetServerVersionCompleted(this, new GetServerVersionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/GetTimezoneInformation", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetTimezoneInformation(out int lBias, out int lStandardBias, out int lDaylightBias, out string strErr) {
            object[] results = this.Invoke("GetTimezoneInformation", new object[0]);
            lBias = ((int)(results[1]));
            lStandardBias = ((int)(results[2]));
            lDaylightBias = ((int)(results[3]));
            strErr = ((string)(results[4]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetTimezoneInformationAsync() {
            this.GetTimezoneInformationAsync(null);
        }
        
        /// <remarks/>
        public void GetTimezoneInformationAsync(object userState) {
            if ((this.GetTimezoneInformationOperationCompleted == null)) {
                this.GetTimezoneInformationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetTimezoneInformationOperationCompleted);
            }
            this.InvokeAsync("GetTimezoneInformation", new object[0], this.GetTimezoneInformationOperationCompleted, userState);
        }
        
        private void OnGetTimezoneInformationOperationCompleted(object arg) {
            if ((this.GetTimezoneInformationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetTimezoneInformationCompleted(this, new GetTimezoneInformationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/GetOrgNameFromDomain", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetOrgNameFromDomain(string strDomain, out string strOrgName, out string strErr) {
            object[] results = this.Invoke("GetOrgNameFromDomain", new object[] {
                        strDomain});
            strOrgName = ((string)(results[1]));
            strErr = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrgNameFromDomainAsync(string strDomain) {
            this.GetOrgNameFromDomainAsync(strDomain, null);
        }
        
        /// <remarks/>
        public void GetOrgNameFromDomainAsync(string strDomain, object userState) {
            if ((this.GetOrgNameFromDomainOperationCompleted == null)) {
                this.GetOrgNameFromDomainOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrgNameFromDomainOperationCompleted);
            }
            this.InvokeAsync("GetOrgNameFromDomain", new object[] {
                        strDomain}, this.GetOrgNameFromDomainOperationCompleted, userState);
        }
        
        private void OnGetOrgNameFromDomainOperationCompleted(object arg) {
            if ((this.GetOrgNameFromDomainCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrgNameFromDomainCompleted(this, new GetOrgNameFromDomainCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/GetAdminStatusMessage", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetAdminStatusMessage(out string strMessage, out string strErr) {
            object[] results = this.Invoke("GetAdminStatusMessage", new object[0]);
            strMessage = ((string)(results[1]));
            strErr = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetAdminStatusMessageAsync() {
            this.GetAdminStatusMessageAsync(null);
        }
        
        /// <remarks/>
        public void GetAdminStatusMessageAsync(object userState) {
            if ((this.GetAdminStatusMessageOperationCompleted == null)) {
                this.GetAdminStatusMessageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAdminStatusMessageOperationCompleted);
            }
            this.InvokeAsync("GetAdminStatusMessage", new object[0], this.GetAdminStatusMessageOperationCompleted, userState);
        }
        
        private void OnGetAdminStatusMessageOperationCompleted(object arg) {
            if ((this.GetAdminStatusMessageCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAdminStatusMessageCompleted(this, new GetAdminStatusMessageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/GetSSOUrl", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool GetSSOUrl(out bool bEnabled, out string strSSOURL, out string strErr) {
            object[] results = this.Invoke("GetSSOUrl", new object[0]);
            bEnabled = ((bool)(results[1]));
            strSSOURL = ((string)(results[2]));
            strErr = ((string)(results[3]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void GetSSOUrlAsync() {
            this.GetSSOUrlAsync(null);
        }
        
        /// <remarks/>
        public void GetSSOUrlAsync(object userState) {
            if ((this.GetSSOUrlOperationCompleted == null)) {
                this.GetSSOUrlOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSSOUrlOperationCompleted);
            }
            this.InvokeAsync("GetSSOUrl", new object[0], this.GetSSOUrlOperationCompleted, userState);
        }
        
        private void OnGetSSOUrlOperationCompleted(object arg) {
            if ((this.GetSSOUrlCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSSOUrlCompleted(this, new GetSSOUrlCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/AssignTasks", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AssignTasks(string strSessionID, string strOrgName, TaskToAssign[] listTasksToAssign, out string strErr) {
            object[] results = this.Invoke("AssignTasks", new object[] {
                        strSessionID,
                        strOrgName,
                        listTasksToAssign});
            strErr = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AssignTasksAsync(string strSessionID, string strOrgName, TaskToAssign[] listTasksToAssign) {
            this.AssignTasksAsync(strSessionID, strOrgName, listTasksToAssign, null);
        }
        
        /// <remarks/>
        public void AssignTasksAsync(string strSessionID, string strOrgName, TaskToAssign[] listTasksToAssign, object userState) {
            if ((this.AssignTasksOperationCompleted == null)) {
                this.AssignTasksOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAssignTasksOperationCompleted);
            }
            this.InvokeAsync("AssignTasks", new object[] {
                        strSessionID,
                        strOrgName,
                        listTasksToAssign}, this.AssignTasksOperationCompleted, userState);
        }
        
        private void OnAssignTasksOperationCompleted(object arg) {
            if ((this.AssignTasksCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AssignTasksCompleted(this, new AssignTasksCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/AssignTasksEx", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AssignTasksEx(string strSessionID, string strOrgName, TaskToAssign[] listTasksToAssign, out string[] strArrUnassignedTaskIDs, out string strErr) {
            object[] results = this.Invoke("AssignTasksEx", new object[] {
                        strSessionID,
                        strOrgName,
                        listTasksToAssign});
            strArrUnassignedTaskIDs = ((string[])(results[1]));
            strErr = ((string)(results[2]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AssignTasksExAsync(string strSessionID, string strOrgName, TaskToAssign[] listTasksToAssign) {
            this.AssignTasksExAsync(strSessionID, strOrgName, listTasksToAssign, null);
        }
        
        /// <remarks/>
        public void AssignTasksExAsync(string strSessionID, string strOrgName, TaskToAssign[] listTasksToAssign, object userState) {
            if ((this.AssignTasksExOperationCompleted == null)) {
                this.AssignTasksExOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAssignTasksExOperationCompleted);
            }
            this.InvokeAsync("AssignTasksEx", new object[] {
                        strSessionID,
                        strOrgName,
                        listTasksToAssign}, this.AssignTasksExOperationCompleted, userState);
        }
        
        private void OnAssignTasksExOperationCompleted(object arg) {
            if ((this.AssignTasksExCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AssignTasksExCompleted(this, new AssignTasksExCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/AssignTask", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AssignTask(string strSessionID, string strOrgName, string strTaskID, string strAssignToUser, out string strErr) {
            object[] results = this.Invoke("AssignTask", new object[] {
                        strSessionID,
                        strOrgName,
                        strTaskID,
                        strAssignToUser});
            strErr = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AssignTaskAsync(string strSessionID, string strOrgName, string strTaskID, string strAssignToUser) {
            this.AssignTaskAsync(strSessionID, strOrgName, strTaskID, strAssignToUser, null);
        }
        
        /// <remarks/>
        public void AssignTaskAsync(string strSessionID, string strOrgName, string strTaskID, string strAssignToUser, object userState) {
            if ((this.AssignTaskOperationCompleted == null)) {
                this.AssignTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAssignTaskOperationCompleted);
            }
            this.InvokeAsync("AssignTask", new object[] {
                        strSessionID,
                        strOrgName,
                        strTaskID,
                        strAssignToUser}, this.AssignTaskOperationCompleted, userState);
        }
        
        private void OnAssignTaskOperationCompleted(object arg) {
            if ((this.AssignTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AssignTaskCompleted(this, new AssignTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://www.Ultimus.Com/ClientServices/AssignQueueTask", RequestNamespace="http://www.Ultimus.Com/ClientServices", ResponseNamespace="http://www.Ultimus.Com/ClientServices", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool AssignQueueTask(string strSessionID, string strTaskID, string strAssignToUser, out string strErr) {
            object[] results = this.Invoke("AssignQueueTask", new object[] {
                        strSessionID,
                        strTaskID,
                        strAssignToUser});
            strErr = ((string)(results[1]));
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void AssignQueueTaskAsync(string strSessionID, string strTaskID, string strAssignToUser) {
            this.AssignQueueTaskAsync(strSessionID, strTaskID, strAssignToUser, null);
        }
        
        /// <remarks/>
        public void AssignQueueTaskAsync(string strSessionID, string strTaskID, string strAssignToUser, object userState) {
            if ((this.AssignQueueTaskOperationCompleted == null)) {
                this.AssignQueueTaskOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAssignQueueTaskOperationCompleted);
            }
            this.InvokeAsync("AssignQueueTask", new object[] {
                        strSessionID,
                        strTaskID,
                        strAssignToUser}, this.AssignQueueTaskOperationCompleted, userState);
        }
        
        private void OnAssignQueueTaskOperationCompleted(object arg) {
            if ((this.AssignQueueTaskCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AssignQueueTaskCompleted(this, new AssignQueueTaskCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.Ultimus.Com/ClientServices")]
    public partial class ForwardedTask {
        
        private string processNameField;
        
        private string stepNameField;
        
        private string stepIDField;
        
        /// <remarks/>
        public string ProcessName {
            get {
                return this.processNameField;
            }
            set {
                this.processNameField = value;
            }
        }
        
        /// <remarks/>
        public string StepName {
            get {
                return this.stepNameField;
            }
            set {
                this.stepNameField = value;
            }
        }
        
        /// <remarks/>
        public string StepID {
            get {
                return this.stepIDField;
            }
            set {
                this.stepIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.Ultimus.Com/ClientServices")]
    public partial class TaskToAssign {
        
        private string strTaskIDField;
        
        private string strAssignUserField;
        
        /// <remarks/>
        public string strTaskID {
            get {
                return this.strTaskIDField;
            }
            set {
                this.strTaskIDField = value;
            }
        }
        
        /// <remarks/>
        public string strAssignUser {
            get {
                return this.strAssignUserField;
            }
            set {
                this.strAssignUserField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.Ultimus.Com/ClientServices")]
    public partial class UserAssociate {
        
        private string associateField;
        
        private string associateFullNameField;
        
        private string organizationField;
        
        /// <remarks/>
        public string Associate {
            get {
                return this.associateField;
            }
            set {
                this.associateField = value;
            }
        }
        
        /// <remarks/>
        public string AssociateFullName {
            get {
                return this.associateFullNameField;
            }
            set {
                this.associateFullNameField = value;
            }
        }
        
        /// <remarks/>
        public string Organization {
            get {
                return this.organizationField;
            }
            set {
                this.organizationField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.Ultimus.Com/ClientServices")]
    public partial class ViewFolder {
        
        private string folderNameField;
        
        private string folderIDField;
        
        private string[] arrViewIDsField;
        
        private string[] arrViewIDsInSequenceField;
        
        /// <remarks/>
        public string FolderName {
            get {
                return this.folderNameField;
            }
            set {
                this.folderNameField = value;
            }
        }
        
        /// <remarks/>
        public string FolderID {
            get {
                return this.folderIDField;
            }
            set {
                this.folderIDField = value;
            }
        }
        
        /// <remarks/>
        public string[] ArrViewIDs {
            get {
                return this.arrViewIDsField;
            }
            set {
                this.arrViewIDsField = value;
            }
        }
        
        /// <remarks/>
        public string[] ArrViewIDsInSequence {
            get {
                return this.arrViewIDsInSequenceField;
            }
            set {
                this.arrViewIDsInSequenceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.Ultimus.Com/ClientServices")]
    public partial class UserSubordinate {
        
        private string fullNameField;
        
        private string shortNameField;
        
        /// <remarks/>
        public string FullName {
            get {
                return this.fullNameField;
            }
            set {
                this.fullNameField = value;
            }
        }
        
        /// <remarks/>
        public string ShortName {
            get {
                return this.shortNameField;
            }
            set {
                this.shortNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.Ultimus.Com/ClientServices")]
    public partial class GroupInfo {
        
        private string strGroupIdField;
        
        private string strGroupNameField;
        
        private string strOrgNameField;
        
        /// <remarks/>
        public string strGroupId {
            get {
                return this.strGroupIdField;
            }
            set {
                this.strGroupIdField = value;
            }
        }
        
        /// <remarks/>
        public string strGroupName {
            get {
                return this.strGroupNameField;
            }
            set {
                this.strGroupNameField = value;
            }
        }
        
        /// <remarks/>
        public string strOrgName {
            get {
                return this.strOrgNameField;
            }
            set {
                this.strOrgNameField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.Ultimus.Com/ClientServices")]
    public partial class UserProperties {
        
        private string strUserFullNameField;
        
        private string strUserEmailField;
        
        private string strDepartmentField;
        
        private string strJobFunctionField;
        
        private string strManagerField;
        
        private string strSupervisorField;
        
        /// <remarks/>
        public string strUserFullName {
            get {
                return this.strUserFullNameField;
            }
            set {
                this.strUserFullNameField = value;
            }
        }
        
        /// <remarks/>
        public string strUserEmail {
            get {
                return this.strUserEmailField;
            }
            set {
                this.strUserEmailField = value;
            }
        }
        
        /// <remarks/>
        public string strDepartment {
            get {
                return this.strDepartmentField;
            }
            set {
                this.strDepartmentField = value;
            }
        }
        
        /// <remarks/>
        public string strJobFunction {
            get {
                return this.strJobFunctionField;
            }
            set {
                this.strJobFunctionField = value;
            }
        }
        
        /// <remarks/>
        public string strManager {
            get {
                return this.strManagerField;
            }
            set {
                this.strManagerField = value;
            }
        }
        
        /// <remarks/>
        public string strSupervisor {
            get {
                return this.strSupervisorField;
            }
            set {
                this.strSupervisorField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(UserServerPreference))]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.Ultimus.Com/ClientServices")]
    public partial class ServerPreferences {
        
        private string serverNameField;
        
        private string computerNameField;
        
        private int portField;
        
        private bool secureField;
        
        private int serverVersionField;
        
        /// <remarks/>
        public string ServerName {
            get {
                return this.serverNameField;
            }
            set {
                this.serverNameField = value;
            }
        }
        
        /// <remarks/>
        public string ComputerName {
            get {
                return this.computerNameField;
            }
            set {
                this.computerNameField = value;
            }
        }
        
        /// <remarks/>
        public int Port {
            get {
                return this.portField;
            }
            set {
                this.portField = value;
            }
        }
        
        /// <remarks/>
        public bool Secure {
            get {
                return this.secureField;
            }
            set {
                this.secureField = value;
            }
        }
        
        /// <remarks/>
        public int ServerVersion {
            get {
                return this.serverVersionField;
            }
            set {
                this.serverVersionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.Ultimus.Com/ClientServices")]
    public partial class UserServerPreference : ServerPreferences {
        
        private string loginNameField;
        
        private string passwordField;
        
        private bool visibleField;
        
        private string domainField;
        
        private string userFRUIDField;
        
        /// <remarks/>
        public string LoginName {
            get {
                return this.loginNameField;
            }
            set {
                this.loginNameField = value;
            }
        }
        
        /// <remarks/>
        public string Password {
            get {
                return this.passwordField;
            }
            set {
                this.passwordField = value;
            }
        }
        
        /// <remarks/>
        public bool Visible {
            get {
                return this.visibleField;
            }
            set {
                this.visibleField = value;
            }
        }
        
        /// <remarks/>
        public string Domain {
            get {
                return this.domainField;
            }
            set {
                this.domainField = value;
            }
        }
        
        /// <remarks/>
        public string UserFRUID {
            get {
                return this.userFRUIDField;
            }
            set {
                this.userFRUIDField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.Ultimus.Com/ClientServices")]
    public partial class InstalledProcess {
        
        private string strProcessNameField;
        
        private int processVersionField;
        
        /// <remarks/>
        public string strProcessName {
            get {
                return this.strProcessNameField;
            }
            set {
                this.strProcessNameField = value;
            }
        }
        
        /// <remarks/>
        public int ProcessVersion {
            get {
                return this.processVersionField;
            }
            set {
                this.processVersionField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.Ultimus.Com/ClientServices")]
    public partial class MemoEntry {
        
        private string strStepLabelField;
        
        private string strUserNameField;
        
        private string strMemoDataField;
        
        private System.DateTime dtEntryDateField;
        
        /// <remarks/>
        public string strStepLabel {
            get {
                return this.strStepLabelField;
            }
            set {
                this.strStepLabelField = value;
            }
        }
        
        /// <remarks/>
        public string strUserName {
            get {
                return this.strUserNameField;
            }
            set {
                this.strUserNameField = value;
            }
        }
        
        /// <remarks/>
        public string strMemoData {
            get {
                return this.strMemoDataField;
            }
            set {
                this.strMemoDataField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime dtEntryDate {
            get {
                return this.dtEntryDateField;
            }
            set {
                this.dtEntryDateField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.Ultimus.Com/ClientServices")]
    public partial class IncidentMemo {
        
        private MemoEntry[] arrMemoEntriesField;
        
        /// <remarks/>
        public MemoEntry[] arrMemoEntries {
            get {
                return this.arrMemoEntriesField;
            }
            set {
                this.arrMemoEntriesField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.Ultimus.Com/ClientServices")]
    public partial class IncidentStatus {
        
        private long lIncidentStatusField;
        
        private string strSummaryField;
        
        private object[] listTaskStatusesField;
        
        private uint priorityField;
        
        private bool bNoAbortField;
        
        /// <remarks/>
        public long lIncidentStatus {
            get {
                return this.lIncidentStatusField;
            }
            set {
                this.lIncidentStatusField = value;
            }
        }
        
        /// <remarks/>
        public string strSummary {
            get {
                return this.strSummaryField;
            }
            set {
                this.strSummaryField = value;
            }
        }
        
        /// <remarks/>
        public object[] ListTaskStatuses {
            get {
                return this.listTaskStatusesField;
            }
            set {
                this.listTaskStatusesField = value;
            }
        }
        
        /// <remarks/>
        public uint Priority {
            get {
                return this.priorityField;
            }
            set {
                this.priorityField = value;
            }
        }
        
        /// <remarks/>
        public bool bNoAbort {
            get {
                return this.bNoAbortField;
            }
            set {
                this.bNoAbortField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.Ultimus.Com/ClientServices")]
    public partial class SchemaFile {
        
        private string schemaFileNameField;
        
        private string schemaDataField;
        
        /// <remarks/>
        public string SchemaFileName {
            get {
                return this.schemaFileNameField;
            }
            set {
                this.schemaFileNameField = value;
            }
        }
        
        /// <remarks/>
        public string SchemaData {
            get {
                return this.schemaDataField;
            }
            set {
                this.schemaDataField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.Ultimus.Com/ClientServices")]
    public partial class TaskStatus {
        
        private string strTaskIDField;
        
        private string strStepLabelField;
        
        private string strUserField;
        
        private string strUserFullNameField;
        
        private long lTaskStatusField;
        
        private long lTaskSubStatusField;
        
        private System.DateTime startTimeField;
        
        private System.DateTime endTimeField;
        
        private uint stepTypeField;
        
        private string strRecipientField;
        
        /// <remarks/>
        public string strTaskID {
            get {
                return this.strTaskIDField;
            }
            set {
                this.strTaskIDField = value;
            }
        }
        
        /// <remarks/>
        public string strStepLabel {
            get {
                return this.strStepLabelField;
            }
            set {
                this.strStepLabelField = value;
            }
        }
        
        /// <remarks/>
        public string strUser {
            get {
                return this.strUserField;
            }
            set {
                this.strUserField = value;
            }
        }
        
        /// <remarks/>
        public string strUserFullName {
            get {
                return this.strUserFullNameField;
            }
            set {
                this.strUserFullNameField = value;
            }
        }
        
        /// <remarks/>
        public long lTaskStatus {
            get {
                return this.lTaskStatusField;
            }
            set {
                this.lTaskStatusField = value;
            }
        }
        
        /// <remarks/>
        public long lTaskSubStatus {
            get {
                return this.lTaskSubStatusField;
            }
            set {
                this.lTaskSubStatusField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime StartTime {
            get {
                return this.startTimeField;
            }
            set {
                this.startTimeField = value;
            }
        }
        
        /// <remarks/>
        public System.DateTime EndTime {
            get {
                return this.endTimeField;
            }
            set {
                this.endTimeField = value;
            }
        }
        
        /// <remarks/>
        public uint StepType {
            get {
                return this.stepTypeField;
            }
            set {
                this.stepTypeField = value;
            }
        }
        
        /// <remarks/>
        public string strRecipient {
            get {
                return this.strRecipientField;
            }
            set {
                this.strRecipientField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.Ultimus.Com/ClientServices")]
    public partial class View {
        
        private string viewNameField;
        
        private string viewIDField;
        
        private string folderIDField;
        
        private int filterMaskField;
        
        /// <remarks/>
        public string ViewName {
            get {
                return this.viewNameField;
            }
            set {
                this.viewNameField = value;
            }
        }
        
        /// <remarks/>
        public string ViewID {
            get {
                return this.viewIDField;
            }
            set {
                this.viewIDField = value;
            }
        }
        
        /// <remarks/>
        public string FolderID {
            get {
                return this.folderIDField;
            }
            set {
                this.folderIDField = value;
            }
        }
        
        /// <remarks/>
        public int FilterMask {
            get {
                return this.filterMaskField;
            }
            set {
                this.filterMaskField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.Ultimus.Com/ClientServices")]
    public partial class ResView {
        
        private string groupNameField;
        
        private string orgNameField;
        
        private View groupViewField;
        
        /// <remarks/>
        public string GroupName {
            get {
                return this.groupNameField;
            }
            set {
                this.groupNameField = value;
            }
        }
        
        /// <remarks/>
        public string OrgName {
            get {
                return this.orgNameField;
            }
            set {
                this.orgNameField = value;
            }
        }
        
        /// <remarks/>
        public View GroupView {
            get {
                return this.groupViewField;
            }
            set {
                this.groupViewField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.Ultimus.Com/ClientServices")]
    public enum ProcessRIGHTS {
        
        /// <remarks/>
        MonitorIncidents,
        
        /// <remarks/>
        IncidentAdministration,
        
        /// <remarks/>
        Rules,
        
        /// <remarks/>
        CreateOrPublishReports,
        
        /// <remarks/>
        AccessReports,
        
        /// <remarks/>
        FullAccess,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.1055.0")]
    [System.SerializableAttribute()]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://www.Ultimus.Com/ClientServices")]
    public enum UserRights {
        
        /// <remarks/>
        None,
        
        /// <remarks/>
        OrganizationChart,
        
        /// <remarks/>
        SystemAdministration,
        
        /// <remarks/>
        ProcessAdministration,
        
        /// <remarks/>
        Reports,
        
        /// <remarks/>
        FlostationConfiguration,
        
        /// <remarks/>
        Director,
        
        /// <remarks/>
        CanConfigureViews,
        
        /// <remarks/>
        FullAccess,
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void AssignAllCurrentTasksCompletedEventHandler(object sender, AssignAllCurrentTasksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AssignAllCurrentTasksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AssignAllCurrentTasksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void ForwardTasksCompletedEventHandler(object sender, ForwardTasksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ForwardTasksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ForwardTasksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void AssignToProcExpertCompletedEventHandler(object sender, AssignToProcExpertCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AssignToProcExpertCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AssignToProcExpertCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void TakeBackTaskCompletedEventHandler(object sender, TakeBackTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class TakeBackTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal TakeBackTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetFormURLForEditCompletedEventHandler(object sender, GetFormURLForEditCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFormURLForEditCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFormURLForEditCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strOpenFormURL {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetFormURLForPreviewCompletedEventHandler(object sender, GetFormURLForPreviewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFormURLForPreviewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFormURLForPreviewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strViewFormURL {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void DeleteTaskCompletedEventHandler(object sender, DeleteTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetForwardableTasksExCompletedEventHandler(object sender, GetForwardableTasksExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetForwardableTasksExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetForwardableTasksExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ForwardedTask[] arrForwardedTasks {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ForwardedTask[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetForwardableTasksCompletedEventHandler(object sender, GetForwardableTasksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetForwardableTasksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetForwardableTasksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ForwardedTask[] arrForwardedTasks {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ForwardedTask[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SetForwardedTasksCompletedEventHandler(object sender, SetForwardedTasksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetForwardedTasksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetForwardedTasksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetForwardedTasksCompletedEventHandler(object sender, GetForwardedTasksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetForwardedTasksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetForwardedTasksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string[] strArrAssignedToUser {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] ProcessName {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string[] StepLabel {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string[] StepID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[4]));
            }
        }
        
        /// <remarks/>
        public System.DateTime[] AssignedFrom {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime[])(this.results[5]));
            }
        }
        
        /// <remarks/>
        public System.DateTime[] AssignedUntil {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.DateTime[])(this.results[6]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[7]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void PutTaskInQueueCompletedEventHandler(object sender, PutTaskInQueueCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class PutTaskInQueueCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal PutTaskInQueueCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetTaskHelpURLCompletedEventHandler(object sender, GetTaskHelpURLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTaskHelpURLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTaskHelpURLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strHelpURL {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetNextQueueTaskCompletedEventHandler(object sender, GetNextQueueTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNextQueueTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNextQueueTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetNextQueueTaskExCompletedEventHandler(object sender, GetNextQueueTaskExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetNextQueueTaskExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetNextQueueTaskExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strProcessName {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public uint nProcessVersion {
            get {
                this.RaiseExceptionIfNecessary();
                return ((uint)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string strStepID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string strTaskID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[5]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void CheckInTaskCompletedEventHandler(object sender, CheckInTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckInTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckInTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void CheckOutTaskCompletedEventHandler(object sender, CheckOutTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckOutTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckOutTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void CanAssignToCompletedEventHandler(object sender, CanAssignToCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CanAssignToCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CanAssignToCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void CanAssignToExCompletedEventHandler(object sender, CanAssignToExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CanAssignToExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CanAssignToExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetTaskCheckOutUserCompletedEventHandler(object sender, GetTaskCheckOutUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTaskCheckOutUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTaskCheckOutUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strTaskCheckOutUser {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetStepDefaultFormCompletedEventHandler(object sender, GetStepDefaultFormCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStepDefaultFormCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStepDefaultFormCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strDefaultForm {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetStepSchemaCompletedEventHandler(object sender, GetStepSchemaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetStepSchemaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetStepSchemaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public SchemaFile[] listSchemas {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SchemaFile[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string strStepDefaultData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetTaskDataCompletedEventHandler(object sender, GetTaskDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTaskDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTaskDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strXML {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SendTaskCompletedEventHandler(object sender, SendTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int nIncidentNo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void ReturnTaskCompletedEventHandler(object sender, ReturnTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ReturnTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ReturnTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SaveTemplateCompletedEventHandler(object sender, SaveTemplateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SaveTemplateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SaveTemplateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strError {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void ExtractFormAndGetURLCompletedEventHandler(object sender, ExtractFormAndGetURLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExtractFormAndGetURLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExtractFormAndGetURLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public byte pbURLorData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public object objURLorData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string pstrDataType {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string strFormType {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[5]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void ExtractFormAndGetURL1CompletedEventHandler(object sender, ExtractFormAndGetURL1CompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ExtractFormAndGetURL1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ExtractFormAndGetURL1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public byte pbURLorData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public object objURLorData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string pstrDataType {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string strFormType {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[5]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetDetailedIncidentStatusCompletedEventHandler(object sender, GetDetailedIncidentStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDetailedIncidentStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDetailedIncidentStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public IncidentStatus objIncidentStatus {
            get {
                this.RaiseExceptionIfNecessary();
                return ((IncidentStatus)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetIncidentMemoCompletedEventHandler(object sender, GetIncidentMemoCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetIncidentMemoCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetIncidentMemoCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public IncidentMemo objIncidentMemo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((IncidentMemo)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void AbortIncidentCompletedEventHandler(object sender, AbortIncidentCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AbortIncidentCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AbortIncidentCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void CanAbortCompletedEventHandler(object sender, CanAbortCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CanAbortCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CanAbortCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool bAbort {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetIncidentGraphicalStatusCompletedEventHandler(object sender, GetIncidentGraphicalStatusCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetIncidentGraphicalStatusCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetIncidentGraphicalStatusCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public byte[] bytesGif {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetInitiatorCompletedEventHandler(object sender, GetInitiatorCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInitiatorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInitiatorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strInitiator {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetProcessSchemaCompletedEventHandler(object sender, GetProcessSchemaCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProcessSchemaCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProcessSchemaCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public SchemaFile[] listSchemas {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SchemaFile[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string strProcessDefaultData {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetIncidentDataCompletedEventHandler(object sender, GetIncidentDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetIncidentDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetIncidentDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strXML {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetInstalledProcessesCompletedEventHandler(object sender, GetInstalledProcessesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInstalledProcessesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInstalledProcessesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public InstalledProcess[] listInstalledProcesses {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InstalledProcess[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetInstalledProcessesByLatestVersionCompletedEventHandler(object sender, GetInstalledProcessesByLatestVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInstalledProcessesByLatestVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetInstalledProcessesByLatestVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public InstalledProcess[] listInstalledProcesses {
            get {
                this.RaiseExceptionIfNecessary();
                return ((InstalledProcess[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetProcessStepsCompletedEventHandler(object sender, GetProcessStepsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProcessStepsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProcessStepsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string[] listSteps {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetProcessHelpURLCompletedEventHandler(object sender, GetProcessHelpURLCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetProcessHelpURLCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetProcessHelpURLCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strHelpURL {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void CheckProcessRightCompletedEventHandler(object sender, CheckProcessRightCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckProcessRightCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckProcessRightCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool bHasRight {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetDataByViewIDCompletedEventHandler(object sender, GetDataByViewIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataByViewIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataByViewIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode xmlNode {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetDataForViewCompletedEventHandler(object sender, GetDataForViewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDataForViewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDataForViewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public System.Xml.XmlNode xmlNode {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Xml.XmlNode)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetReportsCompletedEventHandler(object sender, GetReportsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetReportsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetReportsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string[] strReportIDs {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] strReportsName {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetUserServerPreferencesCompletedEventHandler(object sender, GetUserServerPreferencesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserServerPreferencesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserServerPreferencesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public UserServerPreference[] arrUserServerPrefs {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserServerPreference[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UpdateServerVisibilityCompletedEventHandler(object sender, UpdateServerVisibilityCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateServerVisibilityCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateServerVisibilityCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UpdateUserCredentialsCompletedEventHandler(object sender, UpdateUserCredentialsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateUserCredentialsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateUserCredentialsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void ValidateUserCompletedEventHandler(object sender, ValidateUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ValidateUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ValidateUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetAllJobFunctionsOfUserCompletedEventHandler(object sender, GetAllJobFunctionsOfUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllJobFunctionsOfUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllJobFunctionsOfUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string[] strArrJobFunctions {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void LoginUserCompletedEventHandler(object sender, LoginUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LoginUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LoginUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strSessionID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void LogoutUserCompletedEventHandler(object sender, LogoutUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class LogoutUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal LogoutUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void IsValidSessionIDCompletedEventHandler(object sender, IsValidSessionIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsValidSessionIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsValidSessionIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetFullNameFromShortNameCompletedEventHandler(object sender, GetFullNameFromShortNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFullNameFromShortNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFullNameFromShortNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strUserFullName {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetExactCaseUserCompletedEventHandler(object sender, GetExactCaseUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetExactCaseUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetExactCaseUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strUserWithCase {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void IsDepartmentMemberCompletedEventHandler(object sender, IsDepartmentMemberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsDepartmentMemberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsDepartmentMemberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool bResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetDepartmentsListCompletedEventHandler(object sender, GetDepartmentsListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDepartmentsListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDepartmentsListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string[] strArrDepartmentNames {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string[] DepartmentIDs {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetUserEmailAddressCompletedEventHandler(object sender, GetUserEmailAddressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserEmailAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserEmailAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strUserEmail {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SetUserEmailAddressCompletedEventHandler(object sender, SetUserEmailAddressCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetUserEmailAddressCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetUserEmailAddressCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetUserPropertiesCompletedEventHandler(object sender, GetUserPropertiesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserPropertiesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserPropertiesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public UserProperties objUserProperties {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserProperties)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetUserGroupsCompletedEventHandler(object sender, GetUserGroupsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserGroupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserGroupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public GroupInfo[] arrGroups {
            get {
                this.RaiseExceptionIfNecessary();
                return ((GroupInfo[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetPersonOrganizationsCompletedEventHandler(object sender, GetPersonOrganizationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPersonOrganizationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPersonOrganizationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string[] strArrOrgNames {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetFullNamesFromShortNamesCompletedEventHandler(object sender, GetFullNamesFromShortNamesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetFullNamesFromShortNamesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetFullNamesFromShortNamesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string[] strArrUserFullNames {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetUserSubordinatesCompletedEventHandler(object sender, GetUserSubordinatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserSubordinatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserSubordinatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public UserSubordinate[] listSubOrdinates {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserSubordinate[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetUserSubordinatesExCompletedEventHandler(object sender, GetUserSubordinatesExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserSubordinatesExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserSubordinatesExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public UserSubordinate[] listSubOrdinates {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserSubordinate[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetUserSubordinatesForJobFunctionCompletedEventHandler(object sender, GetUserSubordinatesForJobFunctionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserSubordinatesForJobFunctionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserSubordinatesForJobFunctionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public UserSubordinate[] listSubOrdinates {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserSubordinate[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void IsUserHierarchicallyAboveCompletedEventHandler(object sender, IsUserHierarchicallyAboveCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class IsUserHierarchicallyAboveCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal IsUserHierarchicallyAboveCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool bResult {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetUserIDForJobFunctionCompletedEventHandler(object sender, GetUserIDForJobFunctionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserIDForJobFunctionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserIDForJobFunctionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strUserID {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void CheckUserRightCompletedEventHandler(object sender, CheckUserRightCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckUserRightCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckUserRightCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool bHasRight {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void AreAccessRigthsEnabledCompletedEventHandler(object sender, AreAccessRigthsEnabledCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AreAccessRigthsEnabledCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AreAccessRigthsEnabledCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool bEnabled {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetUserViewsListCompletedEventHandler(object sender, GetUserViewsListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserViewsListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserViewsListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public View[] listViewNames {
            get {
                this.RaiseExceptionIfNecessary();
                return ((View[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetGroupViewsListCompletedEventHandler(object sender, GetGroupViewsListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGroupViewsListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGroupViewsListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public View[] listViewNames {
            get {
                this.RaiseExceptionIfNecessary();
                return ((View[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void AddUserViewCompletedEventHandler(object sender, AddUserViewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddUserViewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddUserViewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void AddGroupViewCompletedEventHandler(object sender, AddGroupViewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddGroupViewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddGroupViewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void DeleteUserViewCompletedEventHandler(object sender, DeleteUserViewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteUserViewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteUserViewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void DeleteGroupViewCompletedEventHandler(object sender, DeleteGroupViewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteGroupViewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteGroupViewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetUserViewsForClientCompletedEventHandler(object sender, GetUserViewsForClientCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserViewsForClientCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserViewsForClientCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public object[] listUserViews {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void RestoreGenericUserViewsCompletedEventHandler(object sender, RestoreGenericUserViewsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RestoreGenericUserViewsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RestoreGenericUserViewsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetGroupViewsCompletedEventHandler(object sender, GetGroupViewsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGroupViewsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGroupViewsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public object[] listGroupViews {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetGroupViewCompletedEventHandler(object sender, GetGroupViewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetGroupViewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetGroupViewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public object objGroupView {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetViewByIDCompletedEventHandler(object sender, GetViewByIDCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetViewByIDCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetViewByIDCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public object objViewInfo {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UpdateUserViewCompletedEventHandler(object sender, UpdateUserViewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateUserViewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateUserViewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UpdateGroupViewCompletedEventHandler(object sender, UpdateGroupViewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateGroupViewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateGroupViewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UpdateViewFolderCompletedEventHandler(object sender, UpdateViewFolderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateViewFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateViewFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void AddViewFolderCompletedEventHandler(object sender, AddViewFolderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddViewFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddViewFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void DeleteViewFolderCompletedEventHandler(object sender, DeleteViewFolderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteViewFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteViewFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UpdateViewFolderNameCompletedEventHandler(object sender, UpdateViewFolderNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateViewFolderNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateViewFolderNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetUserFolderListCompletedEventHandler(object sender, GetUserFolderListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserFolderListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserFolderListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public ViewFolder[] FolderList {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ViewFolder[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UpdateViewSequenceNumberInFolderCompletedEventHandler(object sender, UpdateViewSequenceNumberInFolderCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateViewSequenceNumberInFolderCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UpdateViewSequenceNumberInFolderCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void ShareViewWithUserCompletedEventHandler(object sender, ShareViewWithUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ShareViewWithUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ShareViewWithUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void UnshareViewWithUserCompletedEventHandler(object sender, UnshareViewWithUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UnshareViewWithUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal UnshareViewWithUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetUserNamesforSharedViewCompletedEventHandler(object sender, GetUserNamesforSharedViewCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserNamesforSharedViewCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserNamesforSharedViewCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string[] listUsers {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetViewsSharedToUserCompletedEventHandler(object sender, GetViewsSharedToUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetViewsSharedToUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetViewsSharedToUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public object[] listSharedViews {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetUserPreferencesCompletedEventHandler(object sender, GetUserPreferencesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserPreferencesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserPreferencesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public object objUserPreferences {
            get {
                this.RaiseExceptionIfNecessary();
                return ((object)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SetUserPreferencesCompletedEventHandler(object sender, SetUserPreferencesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetUserPreferencesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetUserPreferencesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetAssociatesCompletedEventHandler(object sender, GetAssociatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAssociatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAssociatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public UserAssociate[] listUserAssociates {
            get {
                this.RaiseExceptionIfNecessary();
                return ((UserAssociate[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void SetAssociatesCompletedEventHandler(object sender, SetAssociatesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetAssociatesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetAssociatesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void RemoveAssociateCompletedEventHandler(object sender, RemoveAssociateCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RemoveAssociateCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal RemoveAssociateCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetDomainsOnServerCompletedEventHandler(object sender, GetDomainsOnServerCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetDomainsOnServerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetDomainsOnServerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string[] strArrDomains {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetServerVersionCompletedEventHandler(object sender, GetServerVersionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetServerVersionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetServerVersionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int dwVersion {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetTimezoneInformationCompletedEventHandler(object sender, GetTimezoneInformationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetTimezoneInformationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetTimezoneInformationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int lBias {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public int lStandardBias {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public int lDaylightBias {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[3]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[4]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetOrgNameFromDomainCompletedEventHandler(object sender, GetOrgNameFromDomainCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrgNameFromDomainCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrgNameFromDomainCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strOrgName {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetAdminStatusMessageCompletedEventHandler(object sender, GetAdminStatusMessageCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAdminStatusMessageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAdminStatusMessageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strMessage {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void GetSSOUrlCompletedEventHandler(object sender, GetSSOUrlCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSSOUrlCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSSOUrlCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public bool bEnabled {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string strSSOURL {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[3]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void AssignTasksCompletedEventHandler(object sender, AssignTasksCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AssignTasksCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AssignTasksCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void AssignTasksExCompletedEventHandler(object sender, AssignTasksExCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AssignTasksExCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AssignTasksExCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string[] strArrUnassignedTaskIDs {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[1]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[2]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void AssignTaskCompletedEventHandler(object sender, AssignTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AssignTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AssignTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    public delegate void AssignQueueTaskCompletedEventHandler(object sender, AssignQueueTaskCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.1055.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AssignQueueTaskCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AssignQueueTaskCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
        
        /// <remarks/>
        public string strErr {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[1]));
            }
        }
    }
}

#pragma warning restore 1591